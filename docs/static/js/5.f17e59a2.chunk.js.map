{"version":3,"sources":["components/trainer/TrainerLauncher.jsx","components/trainer/MorseButtonAddRemove.jsx","components/trainer/MorseButton.jsx","components/trainer/MorseSelectionPanel.jsx","components/common/Stepper.jsx","components/trainer/MorseSelectionContainer.jsx","components/trainer/SessionButton.jsx","components/trainer/TrainerSessionContainer.jsx","services/trainer/composer.js","services/trainer/marker.js","components/trainer/SessionReviewContainer.jsx","components/trainer/TrainerContainer.jsx"],"names":["useStyles","makeStyles","theme","button","shadow","boxShadow","backgroundColor","fontSize","letterSpacing","fontWeight","margin","formControl","minWidth","marginLeft","selectEmpty","TrainerLauncher","noChars","beginWasClicked","classes","useState","source","format","state","setState","handleChange","event","oldValues","target","name","value","id","Button","variant","color","className","starticon","disabled","onClick","FormControl","InputLabel","htmlFor","Select","onChange","inputProps","MenuItem","MorseButtonAddRemove","selected","didClick","stopPropagation","onMouseDown","MorseButton","character","morse","custom","removeChar","addChar","useContext","AudioContext","play","isPlaying","playing","setPlaying","style","padding","width","replace","MorseSelectionContainer","title","columns","translation","characters","selectedChars","addCustomChars","removeCustomChars","listItems","Object","keys","map","key","includes","icon","RemoveIcon","tooltip","AddIcon","defaultProps","Stepper","initialValue","max","min","prompt","valueDidChange","visible","validateValue","val","parseInt","Number","undefined","placeVal","setPlaceVal","setValue","submitInputValue","v","downArw","Input","onBlur","onKeyDown","upArw","charOrder","customChars","lastCount","alphabet","alphabetTrans","makeTranslatedObject","numbersTrans","extendedTrans","punctuationTrans","storedCustomChars","window","localStorage","getItem","setItem","c","storedCharCount","isNaN","length","marginRight","selectedCharsDidChange","selection","openSB","useEffect","substring","handleCloseSB","reason","prevState","chars","i","charAt","count","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","slice","toUpperCase","Translator","translateTextToMorse","action","aria-label","SessionButton","Icon","label","actionType","actnType","TrainerSessionContainer","abortClicked","restartClicked","inSession","didChangeText","textareaRef","useRef","useLayoutEffect","current","focus","AbortIcon","RefreshIcon","ref","spellCheck","readOnly","createScriptFromChars","script","prevWasSpace","limit","Math","floor","random","overallScore","noOfErrors","latestResults","scriptText","resultText","getResult","a","b","m","n","distanceMatrix","Array","fill","j","indicator","step","x","y","err","err2","uniqueChars","u","sort","console","log","errors","errorPlacements","split","reverse","join","errorPlacements2","SessionReviewContainer","latestScript","latestAnswer","Marker","trim","toLowerCase","index","doNotMark","restartRequired","TrainerContainer","document","showResults","keyPress","keyCode","stop","ctrlKey","metaKey","which","beginSession","addEventListener","removeEventListener","Composer","playbackFinished"],"mappings":"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","file":"static/js/5.f17e59a2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./TrainerLauncher.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TrainIcon from \"@material-ui/icons/FitnessCenter\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    shadow: 0,\n    \"&\": {\n      boxShadow: \"none !important\"\n    },\n    \"&:hover\": {\n      backgroundColor: \"#2980b9 !important\",\n      boxShadow: \"none !important\"\n    },\n    fontSize: \"16px\",\n    letterSpacing: \"1px\",\n    fontWeight: \"600\",\n    margin: \"none\"\n  },\n  formControl: {\n    minWidth: 120,\n    marginLeft: \"20px\"\n  },\n  selectEmpty: {}\n}));\n\nconst TrainerLauncher = ({ noChars, beginWasClicked }) => {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    source: 0,\n    format: 0\n  });\n\n  const handleChange = event => {\n    setState(oldValues => ({\n      ...oldValues,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return (\n    <div id=\"TrainerLauncherContainer\">\n      <div id=\"launchPrimary\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          starticon={<TrainIcon />}\n          disabled={noChars}\n          onClick={beginWasClicked}\n        >\n          <TrainIcon />\n          <span className=\"iconBtnText\">BEGIN</span>\n        </Button>\n      </div>\n      <div id=\"launchSecondary\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"format-simple\" color=\"primary\">\n            format\n          </InputLabel>\n          <Select\n            value={state.format}\n            onChange={handleChange}\n            inputProps={{\n              name: \"format\",\n              id: \"format-simple\"\n            }}\n            color=\"primary\"\n          >\n            <MenuItem value={0}>Random</MenuItem>\n            <MenuItem value={1}>Not Random</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"source-simple\" color=\"primary\">\n            source\n          </InputLabel>\n          <Select\n            value={state.source}\n            onChange={handleChange}\n            inputProps={{\n              name: \"source\",\n              id: \"source-simple\"\n            }}\n            color=\"primary\"\n          >\n            <MenuItem value={0}>Tone Generator</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    </div>\n  );\n};\n\nexport default TrainerLauncher;\n","import React from \"react\";\nimport \"./MorseButtonAddRemove.css\";\nimport RemoveIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\n\nconst MorseButtonAddRemove = ({ selected, onClick }) => {\n  function didClick(event) {\n    event.stopPropagation();\n    onClick();\n  }\n\n  return (\n    <div\n      className=\"MorseButtonAddRemove\"\n      onClick={event => didClick(event)}\n      onMouseDown={event => {\n        event.stopPropagation();\n      }}\n    >\n      {selected ? <RemoveIcon /> : <AddIcon />}\n    </div>\n  );\n};\n\nexport default MorseButtonAddRemove;\n","import React, { useContext, useState } from \"react\";\nimport \"./MorseButton.css\";\nimport Button from \"@material-ui/core/Button\";\nimport AudioContext from \"../../context/AudioContext\";\nimport Speaker from \"@material-ui/icons/VolumeUp\";\nimport AddRemoveBtn from \"./MorseButtonAddRemove\";\n\nconst MorseButton = ({\n  character,\n  morse,\n  selected,\n  custom,\n  removeChar,\n  addChar\n}) => {\n  const { play, isPlaying } = useContext(AudioContext);\n  const [playing, setPlaying] = useState(false);\n\n  function addRemoveClicked() {\n    if (selected) {\n      removeChar(character);\n    } else {\n      addChar(character);\n    }\n  }\n\n  return (\n    <div className={`MorseButton ${custom ? \"custom\" : \"\"}`}>\n      <Button\n        style={{ padding: 0, width: \"220px\" }}\n        onClick={() => {\n          if (isPlaying() === false) {\n            play(morse.replace(/−/g, \"-\").replace(/·/g, \".\"), () => {\n              setPlaying(false);\n            });\n            setPlaying(true);\n          }\n        }}\n        className={selected ? \"selected\" : \"\"}\n      >\n        <div className=\"morseButtonTextContainer\">\n          <Speaker\n            className={`btnSpeaker ${playing ? \"show\" : \"\"} ${\n              custom ? \"custom\" : \"\"\n            }`}\n          />\n          <span>{character}</span>\n          <span>{morse}</span>\n        </div>\n        <AddRemoveBtn selected={selected} onClick={() => addRemoveClicked()} />\n      </Button>\n    </div>\n  );\n};\n\nexport default MorseButton;\n","import React from \"react\";\nimport \"./MorseSelectionPanel.css\";\nimport PropTypes from \"prop-types\";\nimport MorseButton from \"./MorseButton\";\nimport Add from \"../common/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Remove from \"../common/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\nconst MorseSelectionContainer = ({\n  title,\n  columns,\n  translation,\n  characters,\n  selectedChars,\n  custom,\n  addCustomChars,\n  removeCustomChars\n}) => {\n  const listItems = Object.keys(translation).map(key => (\n    <MorseButton\n      key={key}\n      character={key}\n      morse={translation[key].replace(/-/g, \"−\").replace(/\\./g, \"·\")}\n      selected={selectedChars.includes(key)}\n      custom={custom}\n      removeChar={() => removeCustomChars(key)}\n      addChar={() => addCustomChars(key)}\n    />\n  ));\n  return (\n    <div\n      className={`morseSelectionPanel ${custom ? \"custom\" : \"\"}`}\n      style={{ width: `${columns * 250}px` }}\n    >\n      <span className=\"morseSelectionPanelTitle\">{title}</span>\n      <div className=\"panelActions\">\n        <Remove\n          icon={RemoveIcon}\n          tooltip={\"Remove All\"}\n          onClick={() => removeCustomChars(characters)}\n        />\n        <Add\n          icon={AddIcon}\n          tooltip={\"Add All\"}\n          onClick={() => addCustomChars(characters)}\n        />\n      </div>\n      <div className=\"morseButtonContainer\">{listItems}</div>\n    </div>\n  );\n};\n\nMorseSelectionContainer.propTypes = {\n  columns: PropTypes.number\n};\n\nMorseSelectionContainer.defaultProps = {\n  columns: 1\n};\n\nexport default MorseSelectionContainer;\n","import React, { useState } from \"react\";\nimport \"./Stepper.css\";\nimport DownArrow from \"./IconButton\";\nimport { IoMdArrowDown as downArw } from \"react-icons/io\";\nimport UpArrow from \"./IconButton\";\nimport { IoMdArrowUp as upArw } from \"react-icons/io\";\nimport Input from \"./Input\";\nimport PropTypes from \"prop-types\";\n\nconst Stepper = ({\n  initialValue,\n  max,\n  min,\n  prompt,\n  valueDidChange,\n  visible\n}) => {\n  const validateValue = val => {\n    val = parseInt(Number(val));\n    if (min !== undefined) {\n      if (val < min) val = min;\n    }\n    if (max !== undefined) {\n      if (val > max) val = max;\n    }\n    return val;\n  };\n  const [placeVal, setPlaceVal] = useState(validateValue(initialValue));\n  const [value, setValue] = useState(validateValue(initialValue));\n\n  const handleInputChange = event => {\n    setPlaceVal(event.target.value);\n  };\n\n  const handleInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitInputValue(event.target.value);\n    }\n  };\n\n  const handleInputBlur = () => {\n    submitInputValue(placeVal);\n  };\n\n  const submitInputValue = v => {\n    v = validateValue(placeVal);\n    setPlaceVal(v);\n    setValue(v);\n    valueDidChange(v);\n  };\n\n  return (\n    <div className={visible ? \"StepperContainer visible\" : \"StepperContainer\"}>\n      <DownArrow\n        icon={downArw}\n        tooltip={\"Descrease Characters\"}\n        disabled={value === min}\n        onClick={() => {\n          const v = validateValue(value - 1);\n          setValue(v);\n          setPlaceVal(v);\n          valueDidChange(v);\n        }}\n      />\n      <Input\n        className=\"stepperInput\"\n        onChange={handleInputChange}\n        value={placeVal}\n        onBlur={handleInputBlur}\n        onKeyDown={handleInputKeyDown}\n        prompt={prompt}\n      />\n      <UpArrow\n        icon={upArw}\n        tooltip={\"Increase Characters\"}\n        disabled={value === max}\n        onClick={() => {\n          const v = validateValue(value + 1);\n          setValue(v);\n          setPlaceVal(v);\n          valueDidChange(v);\n        }}\n      />\n    </div>\n  );\n};\n\nStepper.propTypes = {\n  initialValue: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number\n};\n\nexport default Stepper;\n","import React, { useState, useEffect } from \"react\";\nimport \"./MorseSelectionContainer.css\";\nimport Panel from \"./MorseSelectionPanel\";\nimport { makeTranslatedObject } from \"../../services/morse/morse-translation\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CharStepper from \"../common/Stepper\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Translator from \"../../services/morse/morse-translation\";\n\nconst charOrder = \"kmrsuaptlowinjefyvgqzhbcdx1928374650\";\nlet customChars = \"abc\";\nlet lastCount = 2;\n\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\nconst numbers = \"1234567890\";\nconst extended = \"ÀÆĆĐĴĜŃØŠÞÜŹŻ\";\nconst punctuation = '.,?\"!/()&:;=+-:@';\n\nconst alphabetTrans = makeTranslatedObject(alphabet);\nconst numbersTrans = makeTranslatedObject(numbers);\nconst extendedTrans = makeTranslatedObject(extended);\nconst punctuationTrans = makeTranslatedObject(punctuation);\n\nconst storedCustomChars = window.localStorage.getItem(\"customChars\");\nif (storedCustomChars === null || storedCustomChars === undefined || typeof storedCustomChars != \"string\") {\n  customChars = \"abc\";\n  window.localStorage.setItem(\"customChars\", \"abc\");\n} else {\n  customChars = storedCustomChars;\n}\n\nfunction getValidCount(c) {\n  if (c === null || c === undefined || Number.isNaN(c)) {\n    return 2;\n  } else if (c < 2) {\n    return 2;\n  } else if (c > charOrder.length) {\n    return charOrder.length;\n  }\n  return Number(c);\n}\nconst storedCharCount = window.localStorage.getItem(\"charCount\");\nlastCount = getValidCount(storedCharCount);\nwindow.localStorage.setItem(\"charCount\", lastCount);\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 120,\n    marginRight: \"20px\"\n  },\n  selectEmpty: {}\n}));\n\nconst MorseSelectionContainer = ({ selectedChars, selectedCharsDidChange }) => {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    selection: 0,\n    openSB: false\n  });\n\n  useEffect(() => {\n    selectedCharsDidChange(charOrder.substring(0, lastCount));\n  }, []);\n\n  const handleCloseSB = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setState(prevState => ({ ...prevState, openSB: false }));\n  };\n\n  const handleDropDownChange = event => {\n    setState(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n    if (event.target.name === \"selection\") {\n      setState(prevState => ({ selection: event.target.value }));\n      selectedCharsDidChange(\n        event.target.value === 0\n          ? charOrder.substring(0, lastCount)\n          : customChars\n      );\n    }\n    window.localStorage.setItem(\"selectionMode\", event.target.value);\n  };\n\n  function charCountDidChange(count) {\n    if (count - lastCount === 1) {\n      setState(prevState => ({ ...prevState, openSB: true }));\n    } else {\n      setState(prevState => ({ ...prevState, openSB: false }));\n    }\n    lastCount = count;\n    selectedCharsDidChange(charOrder.substring(0, count));\n    window.localStorage.setItem(\"charCount\", count);\n  }\n\n  function addCustomChars(chars) {\n    for (let i = 0; i < chars.length; i++) {\n      if (!customChars.includes(chars.charAt(i))) {\n        customChars += chars.charAt(i);\n      }\n    }\n    selectedCharsDidChange(customChars);\n    window.localStorage.setItem(\"customChars\", customChars);\n  }\n\n  function removeCustomChars(chars) {\n    for (let i = 0; i < chars.length; i++) {\n      if (customChars.includes(chars.charAt(i))) {\n        customChars = customChars.replace(chars.charAt(i), \"\");\n      }\n    }\n    selectedCharsDidChange(customChars);\n    window.localStorage.setItem(\"customChars\", customChars);\n  }\n\n  return (\n    <div id=\"MorseSelectionContainer\">\n      <h3>Selected Morse Characters: {selectedChars.length}</h3>\n      <div id=\"selectionOptions\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"selection-simple\" color=\"primary\">\n            selection\n          </InputLabel>\n          <Select\n            value={state.selection}\n            onChange={handleDropDownChange}\n            inputProps={{\n              name: \"selection\",\n              id: \"selection-simple\"\n            }}\n            color=\"primary\"\n          >\n            <MenuItem value={0}>Ordered</MenuItem>\n            <MenuItem value={1}>Custom</MenuItem>\n          </Select>\n        </FormControl>\n        <CharStepper\n          initialValue={lastCount}\n          min={2}\n          max={charOrder.length}\n          prompt=\"characters\"\n          valueDidChange={charCountDidChange}\n          visible={state.selection === 0 ? true : false}\n        />\n      </div>\n      <div id=\"innerSelectionContainer\">\n        <Panel\n          title=\"alphabet\"\n          columns={2}\n          characters={alphabet}\n          translation={alphabetTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"numbers\"\n          characters={numbers}\n          translation={numbersTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"extended\"\n          characters={extended}\n          translation={extendedTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"punctuation\"\n          columns={2}\n          characters={punctuation}\n          translation={punctuationTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\"\n          }}\n          open={state.openSB}\n          autoHideDuration={4000}\n          onClose={handleCloseSB}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={\n            <div id=\"message-id\">\n              Latest: <b>{selectedChars.slice(-1).toUpperCase()}</b>\n              <em>\n                {Translator.translateTextToMorse(selectedChars.slice(-1))\n                  .replace(/-/g, \"−\")\n                  .replace(/\\./g, \"·\")}\n              </em>\n            </div>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleCloseSB}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MorseSelectionContainer;\n","import React from \"react\";\nimport \"./SessionButton.css\";\n\nconst SessionButton = ({Icon, label, actionType, onClick}) => {\n\n  let actnType = \"\";\n  switch(actionType) {\n    case \"abort\":\n      actnType = \"abort\";\n      break;\n    case \"restart\":\n      actnType = \"restart\";\n      break;\n    case \"go\":\n      actnType = \"go\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className={`sessionButton ${actnType}`} onClick={onClick}>\n        <Icon className={\"sessionButtonIcon\"} /><span>{label}</span>\n    </div>\n  );\n};\n\nexport default SessionButton;\n","import React, {useRef, useLayoutEffect} from \"react\";\nimport \"./TrainerSessionContainer.css\";\nimport AbortBtn from \"./SessionButton\";\nimport AbortIcon from \"@material-ui/icons/Close\";\nimport RefreshBtn from \"./SessionButton\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst TrainerSessionContainer = ({ abortClicked, restartClicked, inSession, didChangeText }) => {\n  const textareaRef = useRef();\n\n  useLayoutEffect(() => {\n    if (textareaRef !== undefined) {\n      textareaRef.current.focus();\n      textareaRef.current.value = \"\";\n    }\n  });\n\n  return (\n    <div\n      id=\"TrainerSessionContainer\"\n      className={`${inSession ? \"inSession\" : \"\"}`}\n    >\n      <div id=\"sessionOptionContainer\">\n        <AbortBtn actionType={\"abort\"} label=\"Abort\" Icon={AbortIcon} onClick={abortClicked} />\n        <RefreshBtn actionType={\"restart\"} label=\"Restart\" Icon={RefreshIcon} onClick={restartClicked} /></div>\n      <textarea ref={textareaRef} spellCheck={false} readOnly={!inSession} onChange={didChangeText} />\n    </div>\n  );\n};\n\nexport default TrainerSessionContainer;\n","export function createScriptFromChars(chars, options = undefined) {\n    let script = \"\";\n    let prevWasSpace = false;\n    const limit = 30;\n    for (let i = 0; i < limit; i++) {\n        if (!prevWasSpace && i > 0 && i < limit - 2 && (Math.floor(Math.random() * 5) === 0)) {\n            script += \" \";\n            prevWasSpace = true;\n        } else {\n            script += chars.charAt(Math.floor(Math.random() * chars.length));\n            prevWasSpace = false;\n        }\n    }\n    return script;\n}\n\nexport default {\n    createScriptFromChars\n};","export function getResult(a, b) {\n  const m = a.length, n = b.length;\n  const distanceMatrix = Array(n + 1).fill(null).map(() => Array(m + 1).fill(null));\n  for (let i = 0; i <= m; i += 1) {\n    distanceMatrix[0][i] = i;\n  }\n  for (let j = 0; j <= n; j += 1) {\n    distanceMatrix[j][0] = j;\n  }\n\n  for (let j = 1; j <= n; j += 1) {\n    for (let i = 1; i <= m; i += 1) {\n      const indicator = a[i - 1] === b[j - 1] ? 0 : 1;\n      distanceMatrix[j][i] = Math.min(\n        distanceMatrix[j][i - 1] + 1, // deletion\n        distanceMatrix[j - 1][i] + 1, // insertion\n        distanceMatrix[j - 1][i - 1] + indicator, // substitution\n      );\n    }\n  }\n\n  let correct = \"\"\n  let x = n, y = m, step, err = \"\", err2 = \"\";\n  while (x > 0 && y > 0) {\n    step = Math.min(distanceMatrix[x - 1][y - 1], distanceMatrix[x - 1][y], distanceMatrix[x][y - 1]);\n    if (distanceMatrix[x][y] === step) {\n      correct += a[y - 1];\n      err += \"+\";\n      err2 += \"+\";\n      x--;\n      y--;\n    } else if (distanceMatrix[x - 1][y] === step) { // deletion\n      //err += \"+\";\n      err2 += \"-\";\n      x--;\n    } else if (distanceMatrix[x][y - 1] === step) { // insertion\n      err += \"-\";\n      //err2 += \"+\";\n      y--;\n    } else { // substitution\n      err += \"-\";\n      err2 += \"-\";\n      x--;\n      y--;\n    }\n  }\n  while (x > 0) { // too many pre-pended\n    err += \"+\";\n    err2 += \"-\";\n    x--;\n  }\n  while (y > 0) { // too many appended\n    err += \"+\";\n    err2 += \"-\";\n    y--;\n  }\n\n  let uniqueChars = [];\n  for (let u = 0; u < a.length; u++) {\n    const c = a.charAt(u);\n    if (!uniqueChars.includes(c)) {\n      uniqueChars[uniqueChars.length] = c;\n    }\n  }\n  uniqueChars = uniqueChars.sort();\n  console.log(uniqueChars);\n\n  const results = {\n    errors: distanceMatrix[n][m],\n    errorPlacements: err.split(\"\").reverse().join(\"\").substring(0, m),\n    errorPlacements2: err2.split(\"\").reverse().join(\"\").substring(0, n)\n  }\n\n  return results;\n}\n\nexport default {\n  getResult\n};\n\n","import React, {useEffect} from \"react\";\nimport \"./SessionReviewContainer.css\";\nimport Marker from \"../../services/trainer/marker\";\n\nlet overallScore, noOfErrors, charBreakdown, latestResults, scriptText, resultText;\n\nconst SessionReviewContainer = ({latestScript, latestAnswer, visible}) => {\n\n  useEffect(() => {\n    latestResults = Marker.getResult(latestScript, latestAnswer.trim().toLowerCase());\n    noOfErrors = latestResults.errors;\n    overallScore = Math.floor((((latestScript.length - noOfErrors) > 0 ? latestScript.length - noOfErrors : 0) / latestScript.length) * 100);\n    console.log(\"\\nnumber of misses: \", noOfErrors);\n    console.log(\"overall score: \", overallScore);\n    console.log(`${latestScript}\\n${latestAnswer}`);\n    scriptText = latestScript.split(\"\").map((c, index) =>\n      <span key={index} className={`${latestResults.errorPlacements.charAt(index) === \"-\" ? \"erroneous\" : \"\"}`}>{c}</span>\n    );\n    resultText = latestAnswer.split(\"\").map((c, index) =>\n      <span key={index} className={`${latestResults.errorPlacements2.charAt(index) === \"-\" ? \"erroneous\" : \"\"}`}>{c}</span>\n    );\n  }, [visible]);\n\n\n  return (\n    <div\n      id=\"SessionReviewContainer\"\n      className={`${visible ? \"visible\" : \"\"}`}\n    >\n      <div id=\"sessionReviewContent\">\n        <div id=\"sessionReviewHeader\"><p>{overallScore}%</p><p>{noOfErrors} error{noOfErrors === 1 ? \"\" : \"s\"}</p></div>\n        <div id=\"sessionReviewStatsPanel\"></div>\n        <div id=\"sessionReviewComparisonPanel\">\n          <div>{scriptText}</div>\n          <div>{resultText}</div>\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SessionReviewContainer;\n","import React, { useState, useContext, useEffect} from \"react\";\nimport \"./TrainerContainer.css\";\nimport Launcher from \"./TrainerLauncher\";\nimport MorseSelection from \"./MorseSelectionContainer\";\nimport TrainerSessionContainer from \"./TrainerSessionContainer\";\nimport AudioContext from \"../../context/AudioContext\";\nimport Composer from \"../../services/trainer/composer\";\nimport SessionReviewContainer from \"./SessionReviewContainer\";\n\nlet noChars = false;\nlet doNotMark = false;\nlet restartRequired = false;\n\nlet latestScript = \"\";\nlet latestAnswer = \"\";\n\nconst TrainerContainer = () => {\n  document.title = \"MorseT - Trainer\";\n\n  const [state, setState] = useState({\n    selectedChars: \"\",\n    source: 0,\n    inSession: false,\n    showResults: false,\n  });\n\n  const keyPress = event => {\n    if (event.keyCode === 27) {\n     stop();\n     doNotMark = true;\n     setState(prevState => ({ ...prevState, inSession: false }));\n    }\n    if ((event.ctrlKey || event.metaKey) && event.which === 13) {\n      if (state.inSession === false) {\n        beginSession();\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyPress, false);\n\n    return () => {\n      document.removeEventListener(\"keydown\", keyPress, false);\n    };\n  });\n\n  const { play, stop, isPlaying} = useContext(AudioContext);\n\n  noChars = state.selectedChars.length > 0 ? false : true;\n\n  function selectedCharsDidChange(chars) {\n    setState(prevState => ({ ...prevState, selectedChars: chars }));\n  }\n\n  function beginWasClicked() {\n    beginSession();\n  }\n\n  function beginSession() {\n    if (isPlaying() === false) {\n      setState(prevState => ({ ...prevState, inSession: true }));\n      latestAnswer = \"\";\n      latestScript = Composer.createScriptFromChars(state.selectedChars);\n      play(latestScript, playbackFinished, {\n        \"preDelay\": 0.5,\n        \"postDelay\": 1.5\n      });\n    }\n  }\n\n  const answerDidChange = event => {\n    latestAnswer = event.target.value;\n  }\n\n  function playbackFinished() {\n    if (doNotMark === false) {\n      setState(prevState => ({ ...prevState, showResults: true }));\n      setState(prevState => ({ ...prevState, inSession: false }));\n    }\n    if (restartRequired === true) {\n      beginSession();\n    }\n    doNotMark = false;\n    restartRequired = false;\n  }\n\n  function abortClicked() {\n    stop();\n    doNotMark = true;\n    setState(prevState => ({ ...prevState, inSession: false }));\n  }\n\n  function restartClicked() {\n    stop();\n    doNotMark = true;\n    restartRequired = true;\n  }\n\n  return (\n    <div id=\"TrainerContainer\">\n      <Launcher noChars={noChars} beginWasClicked={() => beginWasClicked()} />\n      <MorseSelection\n        selectedChars={state.selectedChars}\n        selectedCharsDidChange={selectedCharsDidChange}\n        beginWasClicked={beginWasClicked}\n      />\n      <TrainerSessionContainer inSession={state.inSession} abortClicked={() => abortClicked()} restartClicked={() => restartClicked()} didChangeText={answerDidChange} />\n      <SessionReviewContainer visible={state.showResults} latestScript={latestScript} latestAnswer={latestAnswer} />\n    </div>\n  );\n};\n\nexport default TrainerContainer;\n"],"sourceRoot":""}