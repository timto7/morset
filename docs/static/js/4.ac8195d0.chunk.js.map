{"version":3,"sources":["components/navbar/VolumeControl.jsx","components/navbar/AudioSettingsPane.jsx","components/navbar/TrainingSettingsPane.jsx","components/navbar/TranslationSettingsPane.jsx","components/navbar/SettingsDropdown.jsx","services/useOutsideClick.js","components/navbar/SettingsControl.jsx","components/navbar/navBar.jsx","components/home/Home.jsx","components/NotFound.jsx","components/UnderConstruction.jsx","App.js","components/common/IconButton.jsx","components/common/Input.jsx"],"names":["VolumeControl","handleVolumeChange","storedVol","window","localStorage","getItem","initialVol","getValidVol","lastUnmutedVol","useState","volume","setVolume","setItem","className","icon","volumeHigh","volumeLow","volumeMute","onClick","Slider","color","orientation","min","max","value","aria-labelledby","onChange","event","newValue","id","SSlider","withStyles","root","width","SSwitch","marginLeft","Switch","AudioSettingsPane","useContext","AudioContext","setFrequency","setPanning","initialFreq","getValidFreq","React","freq","setFreq","initialStereo","getValidStereo","stereo","setStereo","initialEnv","env","setEnv","setEnvelope","Input","target","onBlur","checked","prev","inputProps","TrainingSettingsPane","TranslationSettingsPane","useStyles","makeStyles","background","SettingsDropdown","show","setValue","index","setIndex","options","cntnrClass","classes","BottomNavigation","indexOf","BottomNavigationAction","label","useOutsideClick","ref","callback","handleClick","e","current","contains","useEffect","document","addEventListener","removeEventListener","SettingsControl","setShow","useRef","settingsIcon","tooltip","NavBar","toggle","ThemeContext","stop","to","exact","activeClassName","bulb","info","Home","title","style","fontSize","NotFound","UnderConstruction","TrainerContainer","lazy","App","fallback","Fragment","path","component","props","Icon","disabled","small","type","onFocus","autoHighlight","select","onKeyDown","prompt"],"mappings":"0QA4DeA,EAnDO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACjBC,EAAYC,OAAOC,aAAaC,QAAQ,UACxCC,EAAaC,YAAYL,GAC3BM,EAAiBF,EAAa,EAAIA,EAAa,GAHH,EAKpBG,mBAASH,GALW,mBAKzCI,EALyC,KAKjCC,EALiC,KAMhDR,OAAOC,aAAaQ,QAAQ,SAAUF,GAoBtC,OACE,yBAAKG,UAAU,iBACb,kBAAC,IAAD,CACEA,UAAU,oBACVC,KAAMJ,GAAU,GAAKK,IAAaL,EAAS,EAAIM,IAAYC,IAC3DC,QAfa,WACbR,EAAS,GACXC,EAAU,GACVV,EAAmB,KAEnBU,EAAUH,GACVP,EAAmBO,OAWnB,yBAAKK,UAAU,yBACb,6BACE,kBAACM,EAAA,EAAD,CACEC,MAAM,UACNC,YAAY,WACZC,IAAK,EACLC,IAAK,IACLC,MAAOd,EACPe,kBAAgB,kBAChBC,SAlCiB,SAACC,EAAOC,GACjCjB,EAAUiB,GACNA,EAAW,IACbpB,EAAiBE,GAEnBT,EAAmBS,OAgCf,0BAAMmB,GAAG,YAAYnB,M,8CC7CvBoB,EAAUC,YAAW,CACzBC,KAAM,CAAEC,MAAO,MADDF,CAEbZ,KAEGe,EAAUH,YAAW,CACzBC,KAAM,CAAEG,YAAa,KADPJ,CAEbK,KAgGYC,EA9FW,WAAO,IAAD,EACOC,qBAAWC,KAAxCC,EADsB,EACtBA,aAAcC,EADQ,EACRA,WAEhBC,EAAcC,YAAaxC,OAAOC,aAAaC,QAAQ,cAH/B,EAINuC,IAAMnC,SAASiC,GAJT,mBAIvBG,EAJuB,KAIjBC,EAJiB,KAK9BN,EAAaE,GACbvC,OAAOC,aAAaQ,QAAQ,YAAaiC,GAEzC,IAAME,EAAgBC,YAAe7C,OAAOC,aAAaC,QAAQ,WARnC,EASFuC,IAAMnC,SAASsC,GATb,mBASvBE,EATuB,KASfC,EATe,KAU9BT,EAAWM,GACX5C,OAAOC,aAAaQ,QAAQ,SAAUqC,GAEtC,IAAME,EACwC,UAA5ChD,OAAOC,aAAaC,QAAQ,YAdA,EAeRuC,IAAMnC,SAAS0C,GAfP,mBAevBC,EAfuB,KAelBC,EAfkB,KAgB9BC,YAAYF,GACZjD,OAAOC,aAAaQ,QAAQ,WAAYwC,GA8BxC,OACE,yBAAKvC,UAAU,gBACb,mDACA,yBAAKA,UAAU,cACb,kBAACiB,EAAD,CACEN,MAAOqB,EACPnB,SAlCuB,SAACC,EAAOC,GACrCkB,EAAQlB,IAkCFN,IAAK,IACLC,IAAK,KACLE,kBAAgB,eAChBL,MAAM,YAER,kBAACmC,EAAA,EAAD,CACE1C,UAAU,YACVW,MAAOqB,EACPnB,SAvCsB,SAAAC,GAC5BmB,EAAQnB,EAAM6B,OAAOhC,QAuCfiC,OApCe,WACrBX,EAAQH,YAAaE,QAsCnB,+CACA,yBAAKhC,UAAU,cACb,kBAACiB,EAAD,CACEN,MAAOyB,EACPvB,SAvCyB,SAACC,EAAOC,GACvCsB,EAAUtB,IAuCJN,KAAM,IACNC,IAAK,IACLE,kBAAgB,eAChBL,MAAM,YAER,kBAACmC,EAAA,EAAD,CACE1C,UAAU,YACVW,MAAOyB,EACPvB,SA5CwB,SAAAC,GAC9BuB,EAAUvB,EAAM6B,OAAOhC,QA4CjBiC,OAzCiB,WACvBP,EAAUF,SA2CR,kDACA,kBAACd,EAAD,CACEwB,QAASN,EACT1B,SA3CiB,WACrB2B,GAAO,SAAAM,GAAI,OAAKA,MA2CZvC,MAAM,UACNwC,WAAY,CAAE,aAAc,wBC/FrBC,EARc,WAC3B,OACE,yBAAKhD,UAAU,gBACb,yDCKSiD,EARiB,WAC9B,OACE,yBAAKjD,UAAU,gBACb,4D,8ECQAkD,EAAYC,YAAW,CAC3BhC,KAAM,CACJC,MAAO,IACPgC,WAAY,UAqDDC,EAjDU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACXvB,IAAMnC,SAAS,SADJ,mBAC9Be,EAD8B,KACvB4C,EADuB,OAEXxB,IAAMnC,SAAS,GAFJ,mBAE9B4D,EAF8B,KAEvBC,EAFuB,KAI/BC,EAAU,CAAC,QAAS,WAAY,aAClCC,EAAaL,EAAO,OAAS,GAC3BM,EAAUV,IAEhB,OACE,6BACE,yBAAKlC,GAAG,yBAAyBhB,UAAW2D,IAC5C,yBAAK3C,GAAG,sBAAsBhB,UAAW2D,GACvC,kBAACE,EAAA,EAAD,CACElD,MAAOA,EACPE,SAAU,SAACC,EAAOC,GAChBwC,EAASxC,GACT0C,EAASC,EAAQI,QAAQ/C,KAE3Bf,UAAW4D,EAAQzC,MAEnB,kBAAC4C,EAAA,EAAD,CACEC,MAAM,QACNrD,MAAM,QACNV,KAAM,kBAAC,IAAD,QAER,kBAAC8D,EAAA,EAAD,CACEC,MAAM,WACNrD,MAAM,WACNV,KAAM,kBAAC,IAAD,QAER,kBAAC8D,EAAA,EAAD,CACEC,MAAM,cACNrD,MAAM,cACNV,KAAM,kBAAC,IAAD,SAGV,yBACEe,GAAG,kBACHhB,UAAqB,IAAVwD,EAAc,SAAqB,IAAVA,EAAc,SAAW,UAE7D,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UC5CKS,EAhBS,SAACC,EAAKC,GAC5B,IAAMC,EAAc,SAAAC,GACdH,EAAII,UAAYJ,EAAII,QAAQC,SAASF,EAAE1B,SACzCwB,KAIJK,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASN,GAE5B,WACLK,SAASE,oBAAoB,QAASP,QCkB7BQ,EAzBS,WAAO,IAAD,EACJhF,oBAAS,GADL,mBACrB0D,EADqB,KACfuB,EADe,KAGtBX,EAAMY,mBACZb,EAAgBC,GAAK,WACnBW,GAAQ,MAOV,OACE,yBAAK7E,UAAU,kBAAkBkE,IAAKA,GACpC,kBAAC,EAAD,CAAkBZ,KAAMA,IACxB,kBAAC,IAAD,CACEtD,UAAU,aACVC,KAAM8E,IACNC,QAAS,WACT3E,QAXa,WACjBwE,GAASvB,Q,QCqDE2B,EAxDA,WAAO,IACZC,EAAWzD,qBAAW0D,KAAtBD,OACApF,EAAc2B,qBAAWC,KAAzB5B,UACAsF,EAAS3D,qBAAWC,KAApB0D,KAER,OACE,yBAAKpE,GAAG,gBACN,yBAAKA,GAAG,cACN,yBAAKA,GAAG,oBACN,kBAAC,IAAD,CACEqE,GAAG,IACHC,OAAK,EACLC,gBAAgB,SAChBlF,QAAS,WACP+E,MAGF,0BAAMpF,UAAU,UAElB,6BACE,kBAAC,IAAD,CACEqF,GAAG,WACHE,gBAAgB,SAChBlF,QAAS,WACP+E,MAGF,wCAEF,kBAAC,IAAD,CACEC,GAAG,cACHE,gBAAgB,SAChBlF,QAAS,WACP+E,MAGF,6CAIN,yBAAKpE,GAAG,sBACN,kBAAC,EAAD,CAAe5B,mBAAoB,SAAAS,GAAM,OAAIC,EAAUD,MACvD,kBAAC,IAAD,CACEG,UAAU,YACVC,KAAMuF,IACNR,QAAS,kBACT3E,QAAS,kBAAM6E,OAEjB,kBAAC,IAAD,CAAUlF,UAAU,UAAUC,KAAMwF,IAAMT,QAAS,SACnD,kBAAC,EAAD,UClBKU,G,OArCF,WAEX,OADAjB,SAASkB,MAAQ,gBAEf,6BACE,yBAAK3E,GAAG,iBACN,0BAAMhB,UAAU,eAElB,yBAAKgB,GAAG,uBACN,yBAAKhB,UAAU,mBACb,kBAAC,IAAD,CAAMqF,GAAG,YACP,yBAAKrF,UAAU,mBACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAW4F,MAAO,CAAEC,SAAU,QAEhC,2BACE,oCADF,mCAMN,yBAAK7F,UAAU,mBACb,kBAAC,IAAD,CAAMqF,GAAG,eACP,yBAAKrF,UAAU,mBACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAe4F,MAAO,CAAEC,SAAU,QAEpC,2BACE,wCADF,uCCRCC,G,OApBE,WAEf,OADArB,SAASkB,MAAQ,0BAEf,yBAAK3E,GAAG,oBACN,yBAAKA,GAAG,oBACN,sDACA,8DACA,uDAEF,yBAAKA,GAAG,sBACN,2EACA,2IAEwC,kBAAC,IAAD,CAAMqE,GAAG,KAAT,QAFxC,S,kCCQOU,EAlBW,WAExB,OADAtB,SAASkB,MAAQ,8BAEf,yBAAK3E,GAAG,8BACN,yBAAKA,GAAG,yBACJ,kBAAC,IAAD,CAAO4E,MAAO,CAAEC,SAAU,QAE9B,yBAAK7E,GAAG,4BACN,kDACA,iIAEmC,kBAAC,IAAD,CAAMqE,GAAG,KAAT,QAFnC,QCdR,wCAQA,IAAMW,EAAmBC,gBAAK,kBAC5B,uDAGa,SAASC,IACtB,OACE,yBAAKlG,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAAC,WAAD,CAAUmG,SAAUpE,IAAMqE,UACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,cAAcC,UAAWP,IACrC,kBAAC,IAAD,CAAOM,KAAK,aAAaC,UAAWR,IACpC,kBAAC,IAAD,CAAOO,KAAK,IAAIf,OAAK,EAACgB,UAAWZ,IACjC,kBAAC,IAAD,CAAUL,GAAG,qB,gCCvBzB,4DAGe,SAAS9D,EAAOgF,GAC7B,IACIvB,EADEwB,EAAOD,EAAMtG,KAMnB,OAJIsG,EAAMvB,UACRA,EAAU,yBAAKhF,UAAU,iBAAiBuG,EAAMvB,UAIhD,4BACEhF,UAAS,qBAAgBuG,EAAME,SAAW,WAAa,GAA9C,YACPF,EAAMG,MAAQ,QAAU,IAE1BrG,QAASkG,EAAMlG,SAEf,yBAAKL,UAAU,aACf,kBAACwG,EAAD,CAAMxG,UAAS,eACdgF,K,gCCnBP,4DAGe,SAAStC,EAAM6D,GAM5B,OACE,yBAAKvG,UAAU,SACb,2BACEa,SAAU0F,EAAM1F,SAChBF,MAAO4F,EAAM5F,MACbiC,OAAQ2D,EAAM3D,OACd+D,KAAK,SACLC,QAZc,SAAA9F,IACU,IAAxByF,EAAMM,eACR/F,EAAM6B,OAAOmE,UAWXC,UAAWR,EAAMQ,YAEnB,yBAAK/G,UAAU,yBACf,0BAAMA,UAAU,eAAeuG,EAAMS,W","file":"static/js/4.ac8195d0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./VolumeControl.css\";\nimport VolumeBtn from \"../common/IconButton\";\nimport { getValidVol } from \"../../context/AudioContext\";\nimport { IoMdVolumeHigh as volumeHigh } from \"react-icons/io\";\nimport { IoMdVolumeLow as volumeLow } from \"react-icons/io\";\nimport { IoMdVolumeMute as volumeMute } from \"react-icons/io\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst VolumeControl = ({ handleVolumeChange }) => {\n  const storedVol = window.localStorage.getItem(\"volume\");\n  const initialVol = getValidVol(storedVol);\n  let lastUnmutedVol = initialVol > 0 ? initialVol : 70;\n\n  const [volume, setVolume] = useState(initialVol);\n  window.localStorage.setItem(\"volume\", volume);\n\n  const handleSliderChange = (event, newValue) => {\n    setVolume(newValue);\n    if (newValue > 0) {\n      lastUnmutedVol = volume;\n    }\n    handleVolumeChange(volume);\n  };\n\n  const toggleMute = () => {\n    if (volume > 0) {\n      setVolume(0);\n      handleVolumeChange(0);\n    } else {\n      setVolume(lastUnmutedVol);\n      handleVolumeChange(lastUnmutedVol);\n    }\n  };\n\n  return (\n    <div className=\"VolumeControl\">\n      <VolumeBtn\n        className=\"volCtrl noToolTip\"\n        icon={volume >= 50 ? volumeHigh : volume > 0 ? volumeLow : volumeMute}\n        onClick={toggleMute}\n      />\n      <div className=\"volumeSliderContainer\">\n        <div>\n          <Slider\n            color=\"primary\"\n            orientation=\"vertical\"\n            min={0}\n            max={100}\n            value={volume}\n            aria-labelledby=\"vertical-slider\"\n            onChange={handleSliderChange}\n          />\n        </div>\n        <span id=\"volLabel\">{volume}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default VolumeControl;\n","import React, { useContext } from \"react\";\nimport AudioContext from \"../../context/AudioContext\";\nimport { getValidFreq, getValidStereo } from \"../../context/AudioContext\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Input from \"../common/Input\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { setEnvelope } from \"../../services/morse/morse-player\";\n\nconst SSlider = withStyles({\n  root: { width: 180 }\n})(Slider);\n\nconst SSwitch = withStyles({\n  root: { marginLeft: -10 }\n})(Switch);\n\nconst AudioSettingsPane = () => {\n  const { setFrequency, setPanning } = useContext(AudioContext);\n\n  const initialFreq = getValidFreq(window.localStorage.getItem(\"frequency\"));\n  const [freq, setFreq] = React.useState(initialFreq);\n  setFrequency(initialFreq);\n  window.localStorage.setItem(\"frequency\", freq);\n\n  const initialStereo = getValidStereo(window.localStorage.getItem(\"stereo\"));\n  const [stereo, setStereo] = React.useState(initialStereo);\n  setPanning(initialStereo);\n  window.localStorage.setItem(\"stereo\", stereo);\n\n  const initialEnv =\n    window.localStorage.getItem(\"envelope\") === \"false\" ? false : true;\n  const [env, setEnv] = React.useState(initialEnv);\n  setEnvelope(env);\n  window.localStorage.setItem(\"envelope\", env);\n\n  const handleFreqSliderChange = (event, newValue) => {\n    setFreq(newValue);\n  };\n\n  const handleFreqInputChange = event => {\n    setFreq(event.target.value);\n  };\n\n  const handleFreqBlur = () => {\n    setFreq(getValidFreq(freq));\n  };\n\n  const handleStereoSliderChange = (event, newValue) => {\n    setStereo(newValue);\n  };\n\n  const handleStereoInputChange = event => {\n    setStereo(event.target.value);\n  };\n\n  const handleStereoBlur = () => {\n    setStereo(getValidStereo);\n  };\n\n  const toggleEnvelope = () => {\n    setEnv(prev => !prev);\n  };\n\n  return (\n    <div className=\"SettingsPane\">\n      <h4>Tone Frequency (Hz)</h4>\n      <div className=\"sliderGrid\">\n        <SSlider\n          value={freq}\n          onChange={handleFreqSliderChange}\n          min={200}\n          max={1200}\n          aria-labelledby=\"input-slider\"\n          color=\"primary\"\n        />\n        <Input\n          className=\"freqInput\"\n          value={freq}\n          onChange={handleFreqInputChange}\n          onBlur={handleFreqBlur}\n        />\n      </div>\n      <h4>Stereo Position</h4>\n      <div className=\"sliderGrid\">\n        <SSlider\n          value={stereo}\n          onChange={handleStereoSliderChange}\n          min={-100}\n          max={100}\n          aria-labelledby=\"input-slider\"\n          color=\"primary\"\n        />\n        <Input\n          className=\"freqInput\"\n          value={stereo}\n          onChange={handleStereoInputChange}\n          onBlur={handleStereoBlur}\n        />\n      </div>\n      <h4>Amplitude Envelope</h4>\n      <SSwitch\n        checked={env}\n        onChange={toggleEnvelope}\n        color=\"primary\"\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n      />\n    </div>\n  );\n};\n\nexport default AudioSettingsPane;\n","import React from \"react\";\n\nconst TrainingSettingsPane = () => {\n  return (\n    <div className=\"SettingsPane\">\n      <h4>No training settings...</h4>\n    </div>\n  );\n};\n\nexport default TrainingSettingsPane;\n","import React from \"react\";\n\nconst TranslationSettingsPane = () => {\n  return (\n    <div className=\"SettingsPane\">\n      <h4>No translation settings...</h4>\n    </div>\n  );\n};\n\nexport default TranslationSettingsPane;\n","import React from \"react\";\nimport \"./SettingsDropdown.css\";\nimport \"./SettingsPane.css\";\nimport AudioPane from \"./AudioSettingsPane\";\nimport TrainingPane from \"./TrainingSettingsPane\";\nimport TranslationPane from \"./TranslationSettingsPane\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport AudioIcon from \"@material-ui/icons/Speaker\";\nimport TrainIcon from \"@material-ui/icons/FitnessCenter\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n    background: \"none\"\n  }\n});\n\nconst SettingsDropdown = ({ show }) => {\n  const [value, setValue] = React.useState(\"audio\");\n  const [index, setIndex] = React.useState(0);\n\n  const options = [\"audio\", \"training\", \"translate\"];\n  let cntnrClass = show ? \"show\" : \"\";\n  const classes = useStyles();\n\n  return (\n    <div>\n      <div id=\"settingsAciveIndicator\" className={cntnrClass} />\n      <div id=\"settingsDDContainer\" className={cntnrClass}>\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n            setIndex(options.indexOf(newValue));\n          }}\n          className={classes.root}\n        >\n          <BottomNavigationAction\n            label=\"Audio\"\n            value=\"audio\"\n            icon={<AudioIcon />}\n          />\n          <BottomNavigationAction\n            label=\"Training\"\n            value=\"training\"\n            icon={<TrainIcon />}\n          />\n          <BottomNavigationAction\n            label=\"Translation\"\n            value=\"translation\"\n            icon={<TranslateIcon />}\n          />\n        </BottomNavigation>\n        <div\n          id=\"settingsContent\"\n          className={index === 0 ? \"pane-0\" : index === 1 ? \"pane-1\" : \"pane-2\"}\n        >\n          <AudioPane></AudioPane>\n          <TrainingPane></TrainingPane>\n          <TranslationPane></TranslationPane>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsDropdown;\n","import { useEffect } from \"react\";\n\nconst useOutsideClick = (ref, callback) => {\n  const handleClick = e => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};\n\nexport default useOutsideClick;\n","import React, { useState, useRef } from \"react\";\nimport SettingsBtn from \"../common/IconButton\";\nimport { IoMdSettings as settingsIcon } from \"react-icons/io\";\nimport SettingsDropdown from \"./SettingsDropdown\";\nimport useOutsideClick from \"../../services/useOutsideClick\";\n\nconst SettingsControl = () => {\n  const [show, setShow] = useState(false);\n\n  const ref = useRef();\n  useOutsideClick(ref, () => {\n    setShow(false);\n  });\n\n  const toggleShow = () => {\n    setShow(!show);\n  };\n\n  return (\n    <div className=\"SettingsControl\" ref={ref}>\n      <SettingsDropdown show={show} />\n      <SettingsBtn\n        className=\"volumeCtrl\"\n        icon={settingsIcon}\n        tooltip={\"Settings\"}\n        onClick={toggleShow}\n      />\n    </div>\n  );\n};\n\nexport default SettingsControl;\n","import React, { useContext } from \"react\";\nimport \"./navBar.css\";\nimport ThemeContext from \"../../context/ThemeContext\";\nimport AudioContext from \"../../context/AudioContext\";\nimport { IoMdBulb as bulb } from \"react-icons/io\";\nimport { IoMdInformationCircleOutline as info } from \"react-icons/io\";\nimport BulbIcon from \"../common/IconButton\";\nimport VolumeControl from \"./VolumeControl\";\nimport SettingsControl from \"./SettingsControl\";\nimport InfoIcon from \"../common/IconButton\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const { toggle } = useContext(ThemeContext);\n  const { setVolume } = useContext(AudioContext);\n  const { stop } = useContext(AudioContext);\n\n  return (\n    <div id=\"navContainer\">\n      <div id=\"navContent\">\n        <div id=\"navLinkContainer\">\n          <NavLink\n            to=\"/\"\n            exact\n            activeClassName=\"active\"\n            onClick={() => {\n              stop();\n            }}\n          >\n            <span className=\"logo\" />\n          </NavLink>\n          <div>\n            <NavLink\n              to=\"/trainer\"\n              activeClassName=\"active\"\n              onClick={() => {\n                stop();\n              }}\n            >\n              <h3>trainer</h3>\n            </NavLink>\n            <NavLink\n              to=\"/translator\"\n              activeClassName=\"active\"\n              onClick={() => {\n                stop();\n              }}\n            >\n              <h3>translator</h3>\n            </NavLink>\n          </div>\n        </div>\n        <div id=\"navOptionContainer\">\n          <VolumeControl handleVolumeChange={volume => setVolume(volume)} />\n          <BulbIcon\n            className=\"lightCtrl\"\n            icon={bulb}\n            tooltip={\"Light/Dark Mode\"}\n            onClick={() => toggle()}\n          />\n          <InfoIcon className=\"infoBtn\" icon={info} tooltip={\"Info\"} />\n          <SettingsControl />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Home.css\";\nimport TrainIcon from \"@material-ui/icons/FitnessCenter\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  document.title = \"MorseT - Home\";\n  return (\n    <div>\n      <div id=\"logoContainer\">\n        <span className=\"logoLarge\"></span>\n      </div>\n      <div id=\"homeOptionContainer\">\n        <div className=\"homeOptionOuter\">\n          <Link to=\"/trainer\">\n            <div className=\"homeOptionInner\">\n              <div className=\"homeIconContainer\">\n                <TrainIcon style={{ fontSize: 100 }} />\n              </div>\n              <p>\n                <b>train</b> to be a total morse warrior\n              </p>\n            </div>\n          </Link>\n        </div>\n        <div className=\"homeOptionOuter\">\n          <Link to=\"/translator\">\n            <div className=\"homeOptionInner\">\n              <div className=\"homeIconContainer\">\n                <TranslateIcon style={{ fontSize: 100 }} />\n              </div>\n              <p>\n                <b>translate</b> morse to text or vice versa\n              </p>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./NotFound.css\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  document.title = \"MorseT - Page Not Found\";\n  return (\n    <div id=\"NFErrorContainer\">\n      <div id=\"NFMorseContainer\">\n        <h1>····−</h1>\n        <h1>−−−−−</h1>\n        <h1>····−</h1>\n      </div>\n      <div id=\"NFMessageContainer\">\n        <h3>Oops, it looks like something went wrong...</h3>\n        <p>\n          We couldn't find the page you were looking for. Use the navigation bar\n          above to go somewhere sensible, or go <Link to=\"/\">home</Link>.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./UnderConstruction.css\";\nimport { Link } from \"react-router-dom\";\nimport Build from \"@material-ui/icons/Build\";\n\nconst UnderConstruction = () => {\n  document.title = \"MorseT - Under Construction\";\n  return (\n    <div id=\"UnderConstructionContainer\">\n      <div id=\"UnderConstructionIcon\">\n          <Build style={{ fontSize: 100 }} />\n      </div>\n      <div id=\"UnderConstructionMessage\">\n        <h3>Under Construction</h3>\n        <p>\n          This part of the site is still in development. Use the navigation \n          bar above to go elsewhere, or go <Link to=\"/\">home</Link>.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default UnderConstruction;\n","import React, { lazy, Suspense } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/navbar/navBar\";\nimport Home from \"./components/home/Home\";\nimport NotFound from \"./components/NotFound\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport UnderConstruction from \"./components/UnderConstruction\";\n\nconst TrainerContainer = lazy(() =>\n  import(\"./components/trainer/TrainerContainer\")\n);\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <main>\n        <Suspense fallback={React.Fragment}>\n          <Switch>\n            <Route path=\"/trainer\" component={TrainerContainer} />\n            <Route path=\"/translator\" component={UnderConstruction} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Route path=\"/\" exact component={Home} />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </Suspense>\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./IconButton.css\";\n\nexport default function Switch(props) {\n  const Icon = props.icon;\n  let tooltip;\n  if (props.tooltip) {\n    tooltip = <div className=\"icnBtnToolTip\">{props.tooltip}</div>;\n  }\n\n  return (\n    <button\n      className={`IconButton ${props.disabled ? \"disabled\" : \"\"} ${\n        props.small ? \"small\" : \"\"\n      }`}\n      onClick={props.onClick}\n    >\n      <div className=\"icnBtnBG\" />\n      <Icon className={`icnBtnIcon`} />\n      {tooltip}\n    </button>\n  );\n}\n","import React from \"react\";\nimport \"./Input.css\";\n\nexport default function Input(props) {\n  const handleFocus = event => {\n    if (props.autoHighlight === true) {\n      event.target.select();\n    }\n  };\n  return (\n    <div className=\"Input\">\n      <input\n        onChange={props.onChange}\n        value={props.value}\n        onBlur={props.onBlur}\n        type=\"number\"\n        onFocus={handleFocus}\n        onKeyDown={props.onKeyDown}\n      />\n      <div className=\"inputBorderHighlight\"></div>\n      <span className=\"InputPrompt\">{props.prompt}</span>\n    </div>\n  );\n}\n"],"sourceRoot":""}