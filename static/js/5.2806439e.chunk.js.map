{"version":3,"sources":["components/common/SpeedEntry.jsx","components/trainer/TrainerLauncher.jsx","components/trainer/MorseButtonAddRemove.jsx","components/trainer/MorseButton.jsx","components/trainer/MorseSelectionPanel.jsx","components/common/Stepper.jsx","components/trainer/MorseSelectionContainer.jsx","components/trainer/SessionButton.jsx","components/trainer/TrainerSessionContainer.jsx","services/trainer/composer.js","services/trainer/marker.js","components/trainer/SessionReviewContainer.jsx","components/trainer/TrainerContainer.jsx"],"names":["SpeedEntry","useContext","AudioContext","setSpeed","initialSpeeds","getSpeed","useState","overallSpeed","setOverallSpeed","charSpeed","setCharSpeed","validateOverall","val","parseInt","Number","isNaN","submitOverallInputValue","v","submitCharInputValue","className","id","onChange","event","target","value","onBlur","onKeyDown","key","prompt","useStyles","makeStyles","theme","button","shadow","boxShadow","backgroundColor","fontSize","letterSpacing","fontWeight","margin","formControl","minWidth","marginLeft","selectEmpty","TrainerLauncher","noChars","beginWasClicked","classes","source","spacing","state","setState","handleChange","oldValues","name","Button","variant","color","starticon","disabled","onClick","FormControl","InputLabel","htmlFor","Select","inputProps","MenuItem","MorseButtonAddRemove","selected","didClick","stopPropagation","onMouseDown","MorseButton","character","morse","custom","removeChar","addChar","play","isPlaying","playing","setPlaying","style","padding","width","replace","MorseSelectionContainer","title","columns","translation","characters","selectedChars","addCustomChars","removeCustomChars","listItems","Object","keys","map","includes","icon","RemoveIcon","tooltip","AddIcon","defaultProps","Stepper","initialValue","max","min","valueDidChange","visible","validateValue","undefined","placeVal","setPlaceVal","setValue","submitInputValue","downArw","Input","upArw","charOrder","customChars","lastCount","alphabet","alphabetTrans","makeTranslatedObject","numbersTrans","extendedTrans","punctuationTrans","storedCustomChars","window","localStorage","getItem","setItem","c","storedCharCount","length","marginRight","selectedCharsDidChange","selection","openSB","useEffect","substring","handleCloseSB","reason","prevState","chars","i","charAt","count","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","slice","toUpperCase","Translator","translateTextToMorse","action","aria-label","SessionButton","Icon","label","actionType","actnType","TrainerSessionContainer","abortClicked","restartClicked","inSession","didChangeText","textareaRef","useRef","useLayoutEffect","current","focus","AbortIcon","RefreshIcon","ref","spellCheck","readOnly","createScriptFromChars","options","script","prevWasSpace","limit","Math","floor","random","overallScore","noOfErrors","latestResults","scriptText","resultText","mistakesPresent","missesPresent","extraPresent","getResult","a","b","m","n","distanceMatrix","Array","fill","j","indicator","step","x","y","err","err2","hits","misses","subs","extra","uniqueChars","u","sort","stats","acount","split","obj","errors","errorPlacements","reverse","join","errorPlacements2","getResultType","resultType","SessionReviewContainer","transcriptKey","userInputKey","latestScript","latestAnswer","closeResultsClicked","retryClicked","Marker","trim","toLowerCase","index","CloseIcon","RetryIcon","r","doNotMark","restartRequired","TrainerContainer","document","showResults","keyPress","keyCode","stop","ctrlKey","metaKey","which","beginSession","addEventListener","removeEventListener","body","overflow","getPreDelay","getPostDelay","getSessionCharAmount","Composer","playbackFinished","parseFloat"],"mappings":"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","file":"static/js/5.2806439e.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport \"./SpeedEntry.css\";\nimport OverallSpeedInput from \"./Input.jsx\";\nimport CharSpeedInput from \"./Input.jsx\";\nimport AudioContext from \"../../context/AudioContext\";\n\nexport default function SpeedEntry() {\n  const { setSpeed, getSpeed } = useContext(AudioContext);\n  const initialSpeeds = getSpeed();\n  const [overallSpeed, setOverallSpeed] = useState(initialSpeeds[0]);\n  const [charSpeed, setCharSpeed] = useState(initialSpeeds[1]);\n\n  const validateOverall = val => {\n    val = parseInt(Number(val));\n    if (Number.isNaN(val)) return 15;\n    if (val > charSpeed) return charSpeed;\n    if (val < 1) return 1;\n    return val;\n  };\n\n  const validateChar = val => {\n    val = parseInt(Number(val));\n    if (Number.isNaN(val)) return 18;\n    if (val < overallSpeed) return overallSpeed;\n    if (val < 1) return 1;\n    return val;\n  };\n  \n  const handleOverallInputChange = event => {\n    setOverallSpeed(event.target.value);\n  };\n\n  const handleOverallInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitOverallInputValue(event.target.value);\n    }\n  };\n\n  const handleOverallInputBlur = event => {\n    submitOverallInputValue(validateOverall(overallSpeed));\n  };\n\n  const submitOverallInputValue = v => {\n    v = validateOverall(overallSpeed);\n    setOverallSpeed(v);\n    setSpeed(v, charSpeed);\n  };\n\n  const handleCharInputChange = event => {\n    setCharSpeed(event.target.value);\n  };\n\n  const handleCharInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitCharInputValue(event.target.value);\n    }\n  };\n\n  const handleCharInputBlur = event => {\n    submitCharInputValue(validateOverall(overallSpeed));\n  };\n\n  const submitCharInputValue = v => {\n    v = validateChar(charSpeed);\n    setCharSpeed(v);\n    setSpeed(overallSpeed, v);\n  };\n\n  return (\n    <div className=\"SpeedEntry\">\n      <OverallSpeedInput \n        id=\"overallSpeedInput\"\n        onChange={handleOverallInputChange}\n        value={overallSpeed}\n        onBlur={handleOverallInputBlur}\n        onKeyDown={handleOverallInputKeyDown}\n        prompt=\"overall / character speed\" \n      />\n      <span className=\"speedEntrySlash\">/</span>\n      <CharSpeedInput \n        id=\"charSpeedInput\"\n        onChange={handleCharInputChange}\n        value={charSpeed}\n        onBlur={handleCharInputBlur}\n        onKeyDown={handleCharInputKeyDown}\n      />\n  </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./TrainerLauncher.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TrainIcon from \"@material-ui/icons/FitnessCenter\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport SpeedEntry from \"../common/SpeedEntry\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    shadow: 0,\n    \"&\": {\n      boxShadow: \"none !important\"\n    },\n    \"&:hover\": {\n      backgroundColor: \"#2980b9 !important\",\n      boxShadow: \"none !important\"\n    },\n    fontSize: \"16px\",\n    letterSpacing: \"1px\",\n    fontWeight: \"600\",\n    margin: \"none\"\n  },\n  formControl: {\n    minWidth: 120,\n    marginLeft: \"20px\"\n  },\n  selectEmpty: {}\n}));\n\nconst TrainerLauncher = ({ noChars, beginWasClicked }) => {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    source: 0,\n    spacing: 0\n  });\n\n  const handleChange = event => {\n    setState(oldValues => ({\n      ...oldValues,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return (\n    <div id=\"TrainerLauncherContainer\">\n      <div id=\"launchPrimary\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          starticon={<TrainIcon />}\n          disabled={noChars}\n          onClick={beginWasClicked}\n        >\n          <TrainIcon />\n          <span className=\"iconBtnText\">BEGIN</span>\n        </Button>\n      </div>\n      <div id=\"launchSecondary\">\n        <SpeedEntry />\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"spacing-simple\" color=\"primary\">\n            spacing\n          </InputLabel>\n          <Select\n            value={state.spacing}\n            onChange={handleChange}\n            inputProps={{\n              name: \"spacing\",\n              id: \"spacing-simple\"\n            }}\n            color=\"primary\"\n          >\n            <MenuItem value={0}>Random</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"source-simple\" color=\"primary\">\n            source\n          </InputLabel>\n          <Select\n            value={state.source}\n            onChange={handleChange}\n            inputProps={{\n              name: \"source\",\n              id: \"source-simple\"\n            }}\n            color=\"primary\"\n          >\n            <MenuItem value={0}>Character Select</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    </div>\n  );\n};\n\nexport default TrainerLauncher;\n","import React from \"react\";\nimport \"./MorseButtonAddRemove.css\";\nimport RemoveIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\n\nconst MorseButtonAddRemove = ({ selected, onClick }) => {\n  function didClick(event) {\n    event.stopPropagation();\n    onClick();\n  }\n\n  return (\n    <div\n      className=\"MorseButtonAddRemove\"\n      onClick={event => didClick(event)}\n      onMouseDown={event => {\n        event.stopPropagation();\n      }}\n    >\n      {selected ? <RemoveIcon /> : <AddIcon />}\n    </div>\n  );\n};\n\nexport default MorseButtonAddRemove;\n","import React, { useContext, useState } from \"react\";\nimport \"./MorseButton.css\";\nimport Button from \"@material-ui/core/Button\";\nimport AudioContext from \"../../context/AudioContext\";\nimport Speaker from \"@material-ui/icons/VolumeUp\";\nimport AddRemoveBtn from \"./MorseButtonAddRemove\";\n\nconst MorseButton = ({\n  character,\n  morse,\n  selected,\n  custom,\n  removeChar,\n  addChar\n}) => {\n  const { play, isPlaying } = useContext(AudioContext);\n  const [playing, setPlaying] = useState(false);\n\n  function addRemoveClicked() {\n    if (selected) {\n      removeChar(character);\n    } else {\n      addChar(character);\n    }\n  }\n\n  return (\n    <div className={`MorseButton ${custom ? \"custom\" : \"\"}`}>\n      <Button\n        style={{ padding: 0, width: \"220px\" }}\n        onClick={() => {\n          if (isPlaying() === false) {\n            play(morse.replace(/−/g, \"-\").replace(/·/g, \".\"), () => {\n              setPlaying(false);\n            });\n            setPlaying(true);\n          }\n        }}\n        className={selected ? \"selected\" : \"\"}\n      >\n        <div className=\"morseButtonTextContainer\">\n          <Speaker\n            className={`btnSpeaker ${playing ? \"show\" : \"\"} ${\n              custom ? \"custom\" : \"\"\n            }`}\n          />\n          <span>{character}</span>\n          <span>{morse}</span>\n        </div>\n        <AddRemoveBtn selected={selected} onClick={() => addRemoveClicked()} />\n      </Button>\n    </div>\n  );\n};\n\nexport default MorseButton;\n","import React from \"react\";\nimport \"./MorseSelectionPanel.css\";\nimport PropTypes from \"prop-types\";\nimport MorseButton from \"./MorseButton\";\nimport Add from \"../common/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Remove from \"../common/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\nconst MorseSelectionContainer = ({\n  title,\n  columns,\n  translation,\n  characters,\n  selectedChars,\n  custom,\n  addCustomChars,\n  removeCustomChars\n}) => {\n  const listItems = Object.keys(translation).map(key => (\n    <MorseButton\n      key={key}\n      character={key}\n      morse={translation[key].replace(/-/g, \"−\").replace(/\\./g, \"·\")}\n      selected={selectedChars.includes(key)}\n      custom={custom}\n      removeChar={() => removeCustomChars(key)}\n      addChar={() => addCustomChars(key)}\n    />\n  ));\n  return (\n    <div\n      className={`morseSelectionPanel ${custom ? \"custom\" : \"\"}`}\n      style={{ width: `${columns * 250}px` }}\n    >\n      <span className=\"morseSelectionPanelTitle\">{title}</span>\n      <div className=\"panelActions\">\n        <Remove\n          icon={RemoveIcon}\n          tooltip={\"Remove All\"}\n          onClick={() => removeCustomChars(characters)}\n        />\n        <Add\n          icon={AddIcon}\n          tooltip={\"Add All\"}\n          onClick={() => addCustomChars(characters)}\n        />\n      </div>\n      <div className=\"morseButtonContainer\">{listItems}</div>\n    </div>\n  );\n};\n\nMorseSelectionContainer.propTypes = {\n  columns: PropTypes.number\n};\n\nMorseSelectionContainer.defaultProps = {\n  columns: 1\n};\n\nexport default MorseSelectionContainer;\n","import React, { useState } from \"react\";\nimport \"./Stepper.css\";\nimport DownArrow from \"./IconButton\";\nimport { IoMdArrowDown as downArw } from \"react-icons/io\";\nimport UpArrow from \"./IconButton\";\nimport { IoMdArrowUp as upArw } from \"react-icons/io\";\nimport Input from \"./Input\";\nimport PropTypes from \"prop-types\";\n\nconst Stepper = ({\n  initialValue,\n  max,\n  min,\n  prompt,\n  valueDidChange,\n  visible\n}) => {\n\n  const validateValue = val => {\n    val = parseInt(Number(val));\n    if (min !== undefined) {\n      if (val < min) val = min;\n    }\n    if (max !== undefined) {\n      if (val > max) val = max;\n    }\n    return val;\n  };\n  \n  const [placeVal, setPlaceVal] = useState(validateValue(initialValue));\n  const [value, setValue] = useState(validateValue(initialValue));\n\n  const handleInputChange = event => {\n    setPlaceVal(event.target.value);\n  };\n\n  const handleInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitInputValue(event.target.value);\n    }\n  };\n\n  const handleInputBlur = () => {\n    submitInputValue(placeVal);\n  };\n\n  const submitInputValue = v => {\n    v = validateValue(placeVal);\n    setPlaceVal(v);\n    setValue(v);\n    valueDidChange(v);\n  };\n\n  return (\n    <div className={visible ? \"StepperContainer visible\" : \"StepperContainer\"}>\n      <DownArrow\n        icon={downArw}\n        tooltip={\"Descrease Characters\"}\n        disabled={value === min}\n        onClick={() => {\n          const v = validateValue(value - 1);\n          setValue(v);\n          setPlaceVal(v);\n          valueDidChange(v);\n        }}\n      />\n      <Input\n        className=\"stepperInput\"\n        onChange={handleInputChange}\n        value={placeVal}\n        onBlur={handleInputBlur}\n        onKeyDown={handleInputKeyDown}\n        prompt={prompt}\n      />\n      <UpArrow\n        icon={upArw}\n        tooltip={\"Increase Characters\"}\n        disabled={value === max}\n        onClick={() => {\n          const v = validateValue(value + 1);\n          setValue(v);\n          setPlaceVal(v);\n          valueDidChange(v);\n        }}\n      />\n    </div>\n  );\n};\n\nStepper.propTypes = {\n  initialValue: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number\n};\n\nexport default Stepper;\n","import React, { useState, useEffect } from \"react\";\nimport \"./MorseSelectionContainer.css\";\nimport Panel from \"./MorseSelectionPanel\";\nimport { makeTranslatedObject } from \"../../services/morse/morse-translation\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CharStepper from \"../common/Stepper\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Translator from \"../../services/morse/morse-translation\";\n\nconst charOrder = 'kmrsuaptlowinjefyvgqzhbcdx1928374650.,=/?\"!()&:;+-:@ÀÆĆĐĴĜŃØŠÞÜŹŻ';\nlet customChars = \"abc\";\nlet lastCount = 2;\n\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\nconst numbers = \"1234567890\";\nconst extended = \"ÀÆĆĐĴĜŃØŠÞÜŹŻ\";\nconst punctuation = '.,?\"!/()&:;=+-:@';\n\nconst alphabetTrans = makeTranslatedObject(alphabet);\nconst numbersTrans = makeTranslatedObject(numbers);\nconst extendedTrans = makeTranslatedObject(extended);\nconst punctuationTrans = makeTranslatedObject(punctuation);\n\nconst storedCustomChars = window.localStorage.getItem(\"customChars\");\nif (storedCustomChars === null || storedCustomChars === undefined || typeof storedCustomChars != \"string\") {\n  customChars = \"abc\";\n  window.localStorage.setItem(\"customChars\", \"abc\");\n} else {\n  customChars = storedCustomChars;\n}\n\nfunction getValidCount(c) {\n  if (c === null || c === undefined || Number.isNaN(c)) {\n    return 2;\n  } else if (c < 2) {\n    return 2;\n  } else if (c > charOrder.length) {\n    return charOrder.length;\n  }\n  return Number(c);\n}\nconst storedCharCount = window.localStorage.getItem(\"charCount\");\nlastCount = getValidCount(storedCharCount);\nwindow.localStorage.setItem(\"charCount\", lastCount);\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 120,\n    marginRight: \"20px\"\n  },\n  selectEmpty: {}\n}));\n\nconst MorseSelectionContainer = ({ selectedChars, selectedCharsDidChange }) => {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    selection: 0,\n    openSB: false\n  });\n\n  useEffect(() => {\n    selectedCharsDidChange(charOrder.substring(0, lastCount));\n  }, []);\n\n  const handleCloseSB = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setState(prevState => ({ ...prevState, openSB: false }));\n  };\n\n  const handleDropDownChange = event => {\n    setState(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n    if (event.target.name === \"selection\") {\n      setState(prevState => ({ selection: event.target.value }));\n      selectedCharsDidChange(\n        event.target.value === 0\n          ? charOrder.substring(0, lastCount)\n          : customChars\n      );\n    }\n    window.localStorage.setItem(\"selectionMode\", event.target.value);\n  };\n\n  function charCountDidChange(count) {\n    if (count - lastCount === 1) {\n      setState(prevState => ({ ...prevState, openSB: true }));\n    } else {\n      setState(prevState => ({ ...prevState, openSB: false }));\n    }\n    lastCount = count;\n    selectedCharsDidChange(charOrder.substring(0, count));\n    window.localStorage.setItem(\"charCount\", count);\n  }\n\n  function addCustomChars(chars) {\n    for (let i = 0; i < chars.length; i++) {\n      if (!customChars.includes(chars.charAt(i))) {\n        customChars += chars.charAt(i);\n      }\n    }\n    selectedCharsDidChange(customChars);\n    window.localStorage.setItem(\"customChars\", customChars);\n  }\n\n  function removeCustomChars(chars) {\n    for (let i = 0; i < chars.length; i++) {\n      if (customChars.includes(chars.charAt(i))) {\n        customChars = customChars.replace(chars.charAt(i), \"\");\n      }\n    }\n    selectedCharsDidChange(customChars);\n    window.localStorage.setItem(\"customChars\", customChars);\n  }\n\n  return (\n    <div id=\"MorseSelectionContainer\">\n      <h3>Selected Morse Characters: {selectedChars.length}</h3>\n      <div id=\"selectionOptions\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"selection-simple\" color=\"primary\">\n            selection\n          </InputLabel>\n          <Select\n            value={state.selection}\n            onChange={handleDropDownChange}\n            inputProps={{\n              name: \"selection\",\n              id: \"selection-simple\"\n            }}\n            color=\"primary\"\n          >\n            <MenuItem value={0}>Ordered</MenuItem>\n            <MenuItem value={1}>Custom</MenuItem>\n          </Select>\n        </FormControl>\n        <CharStepper\n          initialValue={lastCount}\n          min={2}\n          max={charOrder.length}\n          prompt=\"characters\"\n          valueDidChange={charCountDidChange}\n          visible={state.selection === 0 ? true : false}\n        />\n      </div>\n      <div id=\"innerSelectionContainer\">\n        <Panel\n          title=\"alphabet\"\n          columns={2}\n          characters={alphabet}\n          translation={alphabetTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"numbers\"\n          characters={numbers}\n          translation={numbersTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"extended\"\n          characters={extended}\n          translation={extendedTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"punctuation\"\n          columns={2}\n          characters={punctuation}\n          translation={punctuationTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\"\n          }}\n          open={state.openSB}\n          autoHideDuration={4000}\n          onClose={handleCloseSB}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={\n            <div id=\"message-id\">\n              Latest: <b>{selectedChars.slice(-1).toUpperCase()}</b>\n              <em>\n                {Translator.translateTextToMorse(selectedChars.slice(-1))\n                  .replace(/-/g, \"−\")\n                  .replace(/\\./g, \"·\")}\n              </em>\n            </div>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleCloseSB}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MorseSelectionContainer;\n","import React from \"react\";\nimport \"./SessionButton.css\";\n\nconst SessionButton = ({Icon, label, actionType, onClick}) => {\n\n  let actnType = \"\";\n  switch(actionType) {\n    case \"abort\":\n      actnType = \"abort\";\n      break;\n    case \"restart\":\n      actnType = \"restart\";\n      break;\n    case \"go\":\n      actnType = \"go\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className={`sessionButton ${actnType}`} onClick={onClick}>\n        <Icon className={\"sessionButtonIcon\"} /><span>{label}</span>\n    </div>\n  );\n};\n\nexport default SessionButton;\n","import React, {useRef, useLayoutEffect} from \"react\";\nimport \"./TrainerSessionContainer.css\";\nimport AbortBtn from \"./SessionButton\";\nimport AbortIcon from \"@material-ui/icons/Close\";\nimport RefreshBtn from \"./SessionButton\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst TrainerSessionContainer = ({ abortClicked, restartClicked, inSession, didChangeText }) => {\n  const textareaRef = useRef();\n\n  useLayoutEffect(() => {\n    if (textareaRef !== undefined) {\n      textareaRef.current.focus();\n      textareaRef.current.value = \"\";\n    }\n  });\n\n  return (\n    <div\n      id=\"TrainerSessionContainer\"\n      className={`${inSession ? \"inSession\" : \"\"}`}\n    >\n      <div id=\"sessionOptionContainer\">\n        <AbortBtn actionType={\"abort\"} label=\"Abort\" Icon={AbortIcon} onClick={abortClicked} />\n        <RefreshBtn actionType={\"restart\"} label=\"Restart\" Icon={RefreshIcon} onClick={restartClicked} />\n      </div>\n      <textarea ref={textareaRef} spellCheck={false} readOnly={!inSession} onChange={didChangeText} />\n    </div>\n  );\n};\n\nexport default TrainerSessionContainer;\n","export function createScriptFromChars(chars, options = undefined) {\n    let script = \"\", prevWasSpace = false, limit = 30;\n\n    if (options !== undefined) {\n        if (\"limit\" in options) {\n          limit = options[\"limit\"];\n        }\n    }\n    \n    for (let i = 0; i < limit; i++) {\n        if (!prevWasSpace && i > 0 && i < limit - 2 && (Math.floor(Math.random() * 8) === 0)) {\n            script += \" \";\n            prevWasSpace = true;\n        } else {\n            script += chars.charAt(Math.floor(Math.random() * chars.length));\n            prevWasSpace = false;\n        }\n    }\n    return script;\n}\n\nexport default {\n    createScriptFromChars\n};","export function getResult(a, b) {\n  const m = a.length, n = b.length;\n  const distanceMatrix = Array(n + 1).fill(null).map(() => Array(m + 1).fill(null));\n  for (let i = 0; i <= m; i += 1) {\n    distanceMatrix[0][i] = i;\n  }\n  for (let j = 0; j <= n; j += 1) {\n    distanceMatrix[j][0] = j;\n  }\n\n  for (let j = 1; j <= n; j += 1) {\n    for (let i = 1; i <= m; i += 1) {\n      const indicator = a[i - 1] === b[j - 1] ? 0 : 1;\n      distanceMatrix[j][i] = Math.min(\n        distanceMatrix[j][i - 1] + 1,\n        distanceMatrix[j - 1][i] + 1,\n        distanceMatrix[j - 1][i - 1] + indicator\n      );\n    }\n  }\n\n  let x = n, y = m, step, err = \"\", err2 = \"\", hits = {}, misses = {}, subs = {}, extra = {},\n  mistakesPresent = false, missesPresent = false, extraPresent = false;\n\n  while (x > 0 && y > 0) {\n    step = Math.min(distanceMatrix[x - 1][y - 1], distanceMatrix[x - 1][y], distanceMatrix[x][y - 1]);\n    if (distanceMatrix[x][y] === step) {\n      err += \"+\";\n      err2 += \"+\";\n      x--;\n      y--;\n      hits[a.charAt(y)] = hits[a.charAt(y)] + 1 || 1;\n    } else if (distanceMatrix[x - 1][y] === step) { // deletion / extra\n      err2 += \"e\";\n      x--;\n      extra[b.charAt(x)] = extra[b.charAt(x)] + 1 || 1;\n      extraPresent = true;\n    } else if (distanceMatrix[x][y - 1] === step) { // insertion / missing\n      err += \"m\";\n      y--;\n      misses[a.charAt(y)] = misses[a.charAt(y)] + 1 || 1;\n      missesPresent = true;\n    } else { // substitution\n      err += \"s\";\n      err2 += \"s\";\n      x--;\n      y--;\n      subs[a.charAt(y)] = subs[a.charAt(y)] + 1 || 1;\n      mistakesPresent = true;\n    }\n  }\n  while (x > 0) { // too many pre-pended\n    err2 += \"e\";\n    x--;\n    extra[b.charAt(x)] = extra[b.charAt(x)] + 1 || 1;\n    extraPresent = true;\n  }\n  while (y > 0) { // too many appended\n    err += \"m\";\n    y--;\n    misses[a.charAt(y)] = misses[a.charAt(y)] + 1 || 1;\n    missesPresent = true;\n  }\n\n  // create stats\n  let uniqueChars = [];\n  for (let u = 0; u < a.length; u++) {\n    const c = a.charAt(u);\n    if (!uniqueChars.includes(c)) {\n      uniqueChars[uniqueChars.length] = c;\n    }\n  }\n  for (let u = 0; u < b.length; u++) {\n    const c = b.charAt(u);\n    if (!uniqueChars.includes(c)) {\n      uniqueChars[uniqueChars.length] = c;\n    }\n  }\n  uniqueChars = uniqueChars.sort();\n  let stats = [];\n  for (let i = 0; i < uniqueChars.length; i++) {\n    const acount = a.split(uniqueChars[i]).length - 1;\n    let obj = {};\n    obj[\"char\"] = uniqueChars[i] === \" \" ? \"[space]\" : uniqueChars[i].toUpperCase();\n    obj[\"wrong\"] = subs[uniqueChars[i]] || 0;\n    obj[\"misses\"] = misses[uniqueChars[i]] || 0;\n    obj[\"extra\"] = extra[uniqueChars[i]] || 0;\n    obj[\"hits\"] = hits[uniqueChars[i]] || 0;\n    obj[\"overall\"] = Math.floor((obj[\"hits\"] / (acount + obj[\"extra\"])) * 100) || 0;\n    stats[i] = obj;\n  }\n\n  const results = {\n    errors: distanceMatrix[n][m],\n    errorPlacements: err.split(\"\").reverse().join(\"\").substring(0, m),\n    errorPlacements2: err2.split(\"\").reverse().join(\"\").substring(0, n),\n    hits: hits,\n    misses: misses,\n    extra: extra,\n    stats: stats,\n    mistakesPresent: mistakesPresent,\n    missesPresent: missesPresent,\n    extraPresent: extraPresent\n  }\n\n  return results;\n}\n\nexport default {\n  getResult\n};\n\n","import React, {useEffect} from \"react\";\nimport \"./SessionReviewContainer.css\";\nimport CloseBtn from \"./SessionButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport RetryBtn from \"./SessionButton\";\nimport RetryIcon from \"@material-ui/icons/Refresh\";\nimport Marker from \"../../services/trainer/marker\";\n\nlet overallScore, noOfErrors, stats = [], latestResults, scriptText, resultText, mistakesPresent, missesPresent, extraPresent;\n\nconst getResultType = c => {\n  let resultType;\n    switch (c) {\n      case \"m\":\n        resultType=\"result_text result_missed\";\n        break;\n      case \"s\":\n        resultType=\"result_text result_sub\";\n        break;\n      case \"e\":\n        resultType=\"result_text result_extra\";\n        break;\n      default:\n        resultType=\"result_text\";\n        break;\n    }\n    return resultType;\n}\n\nconst SessionReviewContainer = ({latestScript, latestAnswer, visible, closeResultsClicked, retryClicked}) => {\n\n  useEffect(() => {\n    latestResults = Marker.getResult(latestScript, latestAnswer.trim().toLowerCase());\n    stats = latestResults.stats;\n    noOfErrors = latestResults.errors;\n    overallScore = Math.floor((((latestScript.length - noOfErrors) > 0 ? latestScript.length - noOfErrors : 0) / latestScript.length) * 100);\n    scriptText = latestScript.split(\"\").map((c, index) =>\n      <span key={index} className={`${getResultType(latestResults.errorPlacements.charAt(index))}`}>{c}</span>\n    );\n    resultText = latestAnswer.split(\"\").map((c, index) =>\n      <span key={index} className={`${getResultType(latestResults.errorPlacements2.charAt(index))}`}>{c}</span>\n    );\n    mistakesPresent = latestResults.mistakesPresent;\n    missesPresent = latestResults.missesPresent;\n    extraPresent = latestResults.extraPresent;\n  }, [visible]);\n\n  let transcriptKey; \n  if (mistakesPresent || missesPresent) {\n    transcriptKey = \n    <div className=\"reviewKeyContainer\">\n      {mistakesPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle red\" /><span className=\"keyText\">mistake</span></div>}\n      {missesPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle yellow\" /><span className=\"keyText\">missed</span></div>}\n    </div>;\n  }\n\n  let userInputKey;\n  if (mistakesPresent || extraPresent) {\n    userInputKey = \n    <div className=\"reviewKeyContainer\">\n      {mistakesPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle red\" /><span className=\"keyText\">mistake</span></div>}\n      {extraPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle yellow\" /><span className=\"keyText\">extra</span></div>}\n    </div>;\n  }\n\n  return (\n    <div\n      id=\"SessionReviewContainer\"\n      className={`${visible ? \"visible\" : \"\"}`}\n    >\n      <div id=\"reviewOptionContainer\">\n        <div id=\"reviewOptionContent\">\n          <CloseBtn actionType={\"abort\"} label=\"Close\" Icon={CloseIcon} onClick={closeResultsClicked} />\n          <RetryBtn label=\"Retry\" Icon={RetryIcon} onClick={retryClicked} />\n        </div>\n      </div>\n      <div id=\"sessionReviewContent\">\n        <div id=\"sessionReviewStatsContainer\">\n          <div id=\"sessionReviewHeader\"><p>{overallScore}%</p><p>{noOfErrors} error{noOfErrors === 1 ? \"\" : \"s\"}</p></div>\n          <div id=\"sessionReviewStatsPanel\"></div>\n          <table>\n            <tbody>\n              <tr><th></th><th>overall</th><th>hit</th><th>mistake</th><th>miss</th><th>extra</th></tr>\n              {stats.map(r => (\n                <tr key={r[\"char\"]}><td>{r[\"char\"]}</td><td>{r[\"overall\"]}%</td><td>{r[\"hits\"]}</td><td>{r[\"wrong\"]}</td><td>{r[\"misses\"]}</td><td>{r[\"extra\"]}</td></tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div id=\"sessionTextReviewContainer\">\n          <div className=\"sessionTextReviewPanel\"><p className=\"sessionTextReviewHeader\">sent transcript</p>{transcriptKey}{scriptText}</div>\n          <div className=\"sessionTextReviewPanel\"><p className=\"sessionTextReviewHeader\">user entry</p>{userInputKey}{resultText}</div>\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SessionReviewContainer;\n","import React, { useState, useContext, useEffect} from \"react\";\nimport \"./TrainerContainer.css\";\nimport Launcher from \"./TrainerLauncher\";\nimport MorseSelection from \"./MorseSelectionContainer\";\nimport TrainerSessionContainer from \"./TrainerSessionContainer\";\nimport AudioContext from \"../../context/AudioContext\";\nimport Composer from \"../../services/trainer/composer\";\nimport SessionReviewContainer from \"./SessionReviewContainer\";\n\nlet noChars = false;\nlet doNotMark = false;\nlet restartRequired = false;\n\nlet latestScript = \"\";\nlet latestAnswer = \"\";\n\nconst TrainerContainer = () => {\n  document.title = \"MorseT - Trainer\";\n\n  const [state, setState] = useState({\n    selectedChars: \"\",\n    source: 0,\n    inSession: false,\n    showResults: false,\n  });\n\n  const keyPress = event => {\n    if (event.keyCode === 27) {\n     stop();\n     doNotMark = true;\n     setState(prevState => ({ ...prevState, inSession: false, showResults: false }));\n    }\n    if ((event.ctrlKey || event.metaKey) && event.which === 13) {\n      if (state.inSession === false) {\n        beginSession();\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyPress, false);\n    return () => {\n      document.removeEventListener(\"keydown\", keyPress, false);\n    };\n  });\n\n  useEffect(() => {\n    if (restartRequired) {\n      restartRequired = false;\n      beginSession();\n    }\n  }, [state.showResults])\n\n  useEffect(() => {\n    if (state.inSession || state.showResults) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"scroll\";\n    }\n  }, [state.inSession, state.showResults])\n\n  const { play, stop, isPlaying, getPreDelay, getPostDelay, getSessionCharAmount } = useContext(AudioContext);\n\n  noChars = state.selectedChars.length > 0 ? false : true;\n\n  function selectedCharsDidChange(chars) {\n    setState(prevState => ({ ...prevState, selectedChars: chars }));\n  }\n\n  function beginWasClicked() {\n    beginSession();\n  }\n\n  function beginSession() {\n    if (isPlaying() === false) {\n      setState(prevState => ({ ...prevState, inSession: true, showResults: false }));\n      latestAnswer = \"\";\n      latestScript = Composer.createScriptFromChars(state.selectedChars, { limit: getSessionCharAmount() });\n      play(latestScript, playbackFinished, {\n        \"preDelay\": parseFloat(getPreDelay()),\n        \"postDelay\": parseFloat(getPostDelay())\n      });\n    }\n  }\n\n  const answerDidChange = event => {\n    latestAnswer = event.target.value;\n  }\n\n  function playbackFinished() {\n    if (doNotMark === false) {\n      setState(prevState => ({ ...prevState, showResults: true }));\n      setState(prevState => ({ ...prevState, inSession: false }));\n    }\n    if (restartRequired === true) {\n      beginSession();\n    }\n    doNotMark = false;\n    restartRequired = false;\n  }\n\n  function abortClicked() {\n    stop();\n    doNotMark = true;\n    setState(prevState => ({ ...prevState, inSession: false }));\n  }\n\n  function restartClicked() {\n    stop();\n    doNotMark = true;\n    restartRequired = true;\n  }\n\n  function closeResultsClicked() {\n    setState(prevState => ({ ...prevState, showResults: false }));\n  }\n\n  function retryClicked() {\n    restartRequired = true;\n    setState(prevState => ({ ...prevState, showResults: false}));\n  }\n\n  return (\n    <div id=\"TrainerContainer\" className={`${state.inSession ? \"inSession\" : \"\"}`}>\n      <div id=\"TrainerConfigContent\" className={`${state.inSession ? \"inSession\" : \"\"} ${state.showResults ? \"showingResults\" : \"\"}`}>\n      <Launcher noChars={noChars} beginWasClicked={() => beginWasClicked()} />\n      <MorseSelection\n        selectedChars={state.selectedChars}\n        selectedCharsDidChange={selectedCharsDidChange}\n        beginWasClicked={beginWasClicked}\n      />\n      </div>\n      \n      <SessionReviewContainer visible={state.showResults} latestScript={latestScript} latestAnswer={latestAnswer} closeResultsClicked={() => closeResultsClicked()} retryClicked={() => retryClicked()}/>\n      <TrainerSessionContainer inSession={state.inSession} abortClicked={() => abortClicked()} restartClicked={() => restartClicked()} didChangeText={answerDidChange} />\n    </div>\n  );\n};\n\nexport default TrainerContainer;\n"],"sourceRoot":""}