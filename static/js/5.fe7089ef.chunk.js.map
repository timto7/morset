{"version":3,"sources":["components/common/SpeedEntry.jsx","components/trainer/TrainerLauncher.jsx","components/trainer/MorseButtonAddRemove.jsx","components/trainer/MorseButton.jsx","components/trainer/MorseSelectionPanel.jsx","components/common/MorseSnackBar.jsx","components/common/Stepper.jsx","components/trainer/SpacingSelectionContainer.jsx","components/trainer/DurationSelectionContainer.jsx","components/trainer/MorseSelectionContainer.jsx","components/trainer/SessionButton.jsx","components/trainer/TrainerSessionContainer.jsx","services/trainer/composer.js","services/trainer/marker.js","components/trainer/SessionReviewContainer.jsx","components/trainer/TextEntryModeContainer.jsx","components/trainer/MorseTextEntry.jsx","components/trainer/TrainerContainer.jsx"],"names":["SpeedEntry","useContext","AudioContext","setSpeed","initialSpeeds","getSpeed","useState","overallSpeed","setOverallSpeed","charSpeed","setCharSpeed","validateOverall","val","parseInt","Number","isNaN","validateChar","submitOverallInputValue","v","submitCharInputValue","className","id","onChange","event","target","value","onBlur","onKeyDown","key","keyCode","prompt","TrainerLauncher","noChars","beginWasClicked","source","sourceChanged","dark","ThemeContext","classes","makeStyles","theme","button","shadow","boxShadow","backgroundColor","letterSpacing","lineHeight","fontWeight","height","margin","borderRadius","formControl","minWidth","marginLeft","select","border","menuItem","selectEmpty","useStyles","Button","variant","style","color","starticon","disabled","onClick","width","FormControl","InputLabel","htmlFor","Select","MenuProps","disableScrollLock","s","inputProps","name","MenuItem","MorseButtonAddRemove","selected","didClick","stopPropagation","onMouseDown","MorseButton","character","morse","custom","removeChar","addChar","playText","stop","isPlaying","playing","setPlaying","padding","MorseSelectionContainer","title","columns","translation","characters","selectedChars","addCustomChars","removeCustomChars","listItems","Object","keys","map","replace","includes","icon","RemoveIcon","tooltip","AddIcon","defaultProps","timeout","Stepper","initialValue","max","min","valueDidChange","visible","validateValue","undefined","placeVal","setPlaceVal","setValue","submitInputValue","IconButton","downArw","Input","upArw","textTransform","fontSize","marginRight","marginBottom","maxWidth","marginTop","justifyContent","validateSpacing","SpacingSelectionContainer","ref","useRef","useOutsideClick","setShow","getRandomSpacing","setRandomSpacing","getCharSpacing","setCharSpacing","initialCharSpacing","spacing","setSpacing","initialRandomSpacing","random","setRandom","show","submitCharSpacingInputValue","checked","prev","tabentry","grpButtonContainer","grpButton","validateCharAmount","validateTimeLimit","parseFloat","DurationSelectionContainer","getDurationMode","setDurationMode","getSessionTimeLimit","setSessionTimeLimit","getSessionCharAmount","setSessionCharAmount","intialCharAmount","charAmount","setCharAmount","submitCharAmountInputValue","initialTimeLimit","timeLimit","setTimeLimit","submitTimeLimitInputValue","initDurationMode","durationType","setDurationType","aria-label","SnackBar","open","onClose","props","useEffect","window","clearTimeout","setTimeout","onMouseEnter","onMouseLeave","children","CloseIcon","tabindex","charOrder","customChars","lastCount","alphabet","alphabetTrans","makeTranslatedObject","numbersTrans","extendedTrans","punctuationTrans","storedCustomChars","localStorage","getItem","setItem","c","storedCharCount","length","selectedCharsDidChange","selection","openSB","state","setState","play","substring","chars","i","charAt","prevState","paddingBottom","count","StopIcon","PlayIcon","size","morsetrans","toUpperCase","SessionButton","Icon","label","actionType","actnType","TrainerSessionContainer","abortClicked","restartClicked","inSession","didChangeText","totalDuration","startDelay","textareaRef","getProgressBar","useLayoutEffect","current","focus","AbortIcon","RefreshIcon","transitionDuration","transitionDelay","visibility","spellCheck","readOnly","createScriptFromChars","options","script","totalTime","dotLength","dashLength","pauseLength","spaceLength","charLimit","randomSpacing","charSpacing","spaceCountdown","durationTime","setOptions","setSpeedElements","farns","Math","floor","appendTime","morseTrans","split","forEach","char","slice","composition","trim","createScriptFromTextEntry","textEntry","playMode","lineLimit","calculateTotalTime","str","lines","l","index","x","match","splice","linesCopy","selectedLines","lineNo","push","join","overallScore","noOfErrors","latestResults","scriptText","resultText","mistakesPresent","missesPresent","extraPresent","getResult","a","b","m","n","distanceMatrix","Array","fill","j","indicator","step","y","err","err2","hits","misses","subs","extra","uniqueChars","u","sort","stats","acount","obj","errors","errorPlacements","reverse","errorPlacements2","getResultType","resultType","SessionReviewContainer","transcriptKey","userInputKey","latestScript","latestAnswer","closeResultsClicked","retryClicked","playReviewSound","Marker","toLowerCase","RetryIcon","r","TextEntryModeContainer","getFullTextMode","setFullTextMode","getTextLineLimit","setTextLineLimit","initialLineLimit","setLineLimit","initialFullTextMode","textMode","setTextMode","submitLineLimitInputValue","Switch","binPressed","MorseTextEntry","inReview","getTextEntryString","setOpenSB","scrollTo","document","body","classList","add","remove","trashIcon","placeholder","toString","test","doNotMark","restartRequired","textEntryString","latestComposition","TrainerContainer","getPreDelay","getPostDelay","getSessionSource","setSessionSource","setTextEntryString","showResults","textEntryIsEmpty","keyPress","ctrlKey","metaKey","which","beginSession","speeds","Composer","playbackFinished","addEventListener","removeEventListener","overflow"],"mappings":"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","file":"static/js/5.fe7089ef.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport \"./SpeedEntry.css\";\nimport OverallSpeedInput from \"./Input.jsx\";\nimport CharSpeedInput from \"./Input.jsx\";\nimport AudioContext from \"../../context/AudioContext\";\n\nconst TABKEY = 0;\n\nexport default function SpeedEntry() {\n  const { setSpeed, getSpeed } = useContext(AudioContext);\n  const initialSpeeds = getSpeed();\n  const [overallSpeed, setOverallSpeed] = useState(initialSpeeds[0]);\n  const [charSpeed, setCharSpeed] = useState(initialSpeeds[1]);\n\n  const validateOverall = val => {\n    val = parseInt(Number(val));\n    if (Number.isNaN(val)) return 15;\n    if (val < 1) return 1;\n    return val;\n  };\n\n  const validateChar = val => {\n    val = parseInt(Number(val));\n    if (Number.isNaN(val)) return 18;\n    if (val < 1) return 1;\n    return val;\n  };\n  \n  const handleOverallInputChange = event => {\n    setOverallSpeed(event.target.value);\n  };\n\n  const handleOverallInputKeyDown = event => {\n    if (event.key === \"Enter\" || event.keyCode === TABKEY) {\n      submitOverallInputValue(validateOverall(event.target.value));\n    }\n  };\n\n  const handleOverallInputBlur = event => {\n    submitOverallInputValue(validateOverall(overallSpeed));\n  };\n\n  const submitOverallInputValue = v => {\n    v = validateOverall(overallSpeed);\n    setOverallSpeed(v);\n    if (overallSpeed > charSpeed) setCharSpeed(overallSpeed);\n    setSpeed(v, overallSpeed > charSpeed ? v : charSpeed);\n  };\n\n  const handleCharInputChange = event => {\n    setCharSpeed(event.target.value);\n  };\n\n  const handleCharInputKeyDown = event => {\n    if (event.key === \"Enter\" || event.keyCode === TABKEY) {\n      submitCharInputValue(validateChar(event.target.value));\n    }\n  };\n\n  const handleCharInputBlur = event => {\n    submitCharInputValue(validateOverall(overallSpeed));\n  };\n\n  const submitCharInputValue = v => {\n    v = validateChar(charSpeed);\n    setCharSpeed(v);\n    if (charSpeed < overallSpeed) setOverallSpeed(charSpeed);\n    setSpeed(charSpeed < overallSpeed ? v : overallSpeed, v);\n  };\n\n  return (\n    <div className=\"SpeedEntry\">\n      <OverallSpeedInput \n        id=\"overallSpeedInput\"\n        onChange={handleOverallInputChange}\n        value={overallSpeed}\n        onBlur={handleOverallInputBlur}\n        onKeyDown={handleOverallInputKeyDown}\n        prompt=\"overall / character speed\" \n      />\n      <span className=\"speedEntrySlash\">/</span>\n      <CharSpeedInput \n        id=\"charSpeedInput\"\n        onChange={handleCharInputChange}\n        value={charSpeed}\n        onBlur={handleCharInputBlur}\n        onKeyDown={handleCharInputKeyDown}\n      />\n  </div>\n  );\n}\n","import React, {useContext} from \"react\";\nimport \"./TrainerLauncher.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ThemeContext from \"../../context/ThemeContext\";\nimport TrainIcon from \"@material-ui/icons/FitnessCenter\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport SpeedEntry from \"../common/SpeedEntry\";\n\nconst TrainerLauncher = ({ noChars, beginWasClicked, source, sourceChanged }) => {\n  const {dark} = useContext(ThemeContext);\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      shadow: 0,\n      \"&\": {\n        boxShadow: \"none !important\"\n      },\n      \"&:hover\": {\n        backgroundColor: (dark ? \"rbga(255, 255, 255, 0.1)\" : \"#0b8eff\"),\n        boxShadow: \"none !important\"\n      },\n      letterSpacing: \"2px\",\n      lineHeight: \"20px\",\n      fontWeight: \"600\",\n      height: \"52px\",\n      margin: \"0px\",\n      borderRadius: \"6px\"\n    },\n    formControl: {\n      minWidth: 120,\n      marginLeft: \"20px\",\n      fontWeight: \"500\"\n    },\n    select: {\n      border: \"none\"\n    },\n    menuItem: {\n      fontWeight: \"500\"\n    },\n    selectEmpty: {}\n  }));\n  const classes = useStyles();\n\n  return (\n    <div id=\"TrainerLauncherContainer\">\n      <div id=\"launchPrimary\">\n        <Button\n          variant={dark ? \"outlined\" : \"contained\"}\n          style={{\n            ...(dark && {border: !noChars ? \"2px solid #3ea6ff\" : \"2px solid #77777777\"}),\n          }}\n          color=\"primary\"\n          className={classes.button}\n          starticon={<TrainIcon />}\n          disabled={noChars}\n          onClick={beginWasClicked}\n        >\n          <TrainIcon style={{height: \"30px\", width: \"30px\"}}/>\n          <span className=\"iconBtnText\">BEGIN</span>\n        </Button>\n      </div>\n      <div id=\"launchSecondary\">\n        <SpeedEntry />\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"source-simple\" color=\"primary\">\n            session source\n          </InputLabel>\n          <Select\n            MenuProps={{\n              disableScrollLock: true\n            }}\n            value={source}\n            onChange={s => {sourceChanged(s.target.value)}}\n            inputProps={{\n              name: \"source\",\n              id: \"source-simple\"\n            }}\n            color=\"primary\"\n          >\n            <MenuItem value={0} className={classes.menuItem}>Character Selector</MenuItem>\n            <MenuItem value={1} className={classes.menuItem}>Text Entry</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    </div>\n  );\n};\n\nexport default TrainerLauncher;\n","import React from \"react\";\nimport \"./MorseButtonAddRemove.css\";\nimport { FiSquare as OmmittedIcon } from \"react-icons/fi\";\nimport { FiCheckSquare as AddedIcon } from \"react-icons/fi\";\n\nconst MorseButtonAddRemove = ({ selected, onClick }) => {\n  function didClick(event) {\n    event.stopPropagation();\n    onClick();\n  }\n\n  return (\n    <div\n      className=\"MorseButtonAddRemove\"\n      onClick={event => didClick(event)}\n      onMouseDown={event => {\n        event.stopPropagation();\n      }}\n    >\n      <div>\n        <div className=\"addRemoveRipple\" />\n        {selected ? <AddedIcon style={{width: \"24px\", height: \"24px\"}}/> : <OmmittedIcon style={{width: \"24px\", height: \"24px\"}}/>}\n      </div>\n    </div>\n  );\n};\n\nexport default MorseButtonAddRemove;\n","import React, { useContext, useState } from \"react\";\nimport \"./MorseButton.css\";\nimport Button from \"@material-ui/core/Button\";\nimport AudioContext from \"../../context/AudioContext\";\nimport { FiVolume2 as Speaker } from \"react-icons/fi\";\nimport AddRemoveBtn from \"./MorseButtonAddRemove\";\n\nconst MorseButton = ({\n  character,\n  morse,\n  selected,\n  custom,\n  removeChar,\n  addChar,\n  disabled\n}) => {\n  const {playText, stop, isPlaying} = useContext(AudioContext);\n  const [playing, setPlaying] = useState(false);\n\n  function addRemoveClicked() {\n    if (selected) {\n      removeChar(character);\n    } else {\n      addChar(character);\n    }\n  }\n\n  return (\n    <div className={`MorseButton ${custom ? \"custom\" : \"\"}`}>\n      <Button\n        disabled={disabled}\n        style={{\n          padding: \"0px\",\n          height: \"30px\",\n          width: \"200px\",\n          borderRadius: \"6px\",\n          ...playing && {backgroundColor: \"#77777722\"}\n        }}\n        onClick={() => {\n          if (isPlaying() === false) {\n            playText(character, () => {\n              setPlaying(false);\n            });\n            setPlaying(true);\n          } else {\n            stop();\n          }\n        }}\n        className={selected ? \"selected\" : \"\"}\n      >\n        <div className=\"morseButtonTextContainer\">\n          <AddRemoveBtn selected={selected} onClick={() => addRemoveClicked()} />\n          <span>{character}</span>\n          <span>{morse}</span>\n          <Speaker\n            className={`btnSpeaker ${playing ? \"show\" : \"\"} ${\n              custom ? \"custom\" : \"\"\n            }`}\n          />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default MorseButton;\n","import React from \"react\";\nimport \"./MorseSelectionPanel.css\";\nimport PropTypes from \"prop-types\";\nimport MorseButton from \"./MorseButton\";\nimport Add from \"../common/IconButton\";\nimport Remove from \"../common/IconButton\";\nimport { FiPlus as AddIcon } from \"react-icons/fi\";\nimport { FiMinus as RemoveIcon } from \"react-icons/fi\";\n\nconst MorseSelectionContainer = ({\n  title,\n  columns,\n  translation,\n  characters,\n  selectedChars,\n  custom,\n  addCustomChars,\n  removeCustomChars,\n  disabled\n}) => {\n  const listItems = Object.keys(translation).map(key => (\n    <MorseButton\n      key={key}\n      character={key}\n      morse={translation[key].replace(/-/g, \"−\").replace(/\\./g, \"·\")}\n      selected={selectedChars.includes(key)}\n      custom={custom}\n      removeChar={() => removeCustomChars(key)}\n      addChar={() => addCustomChars(key)}\n      disabled={disabled}\n    />\n  ));\n  return (\n    <div\n      className={`morseSelectionPanel ${custom ? \"custom\" : \"\"}`}\n      style={{ width: `${columns * 204}px` }}\n    >\n      <span className=\"morseSelectionPanelTitle\">{title}</span>\n      <div className=\"panelActions\">\n        <Remove\n          icon={RemoveIcon}\n          tooltip={\"Remove All\"}\n          onClick={() => removeCustomChars(characters)}\n        />\n        <Add\n          icon={AddIcon}\n          tooltip={\"Add All\"}\n          onClick={() => addCustomChars(characters)}\n        />\n      </div>\n      <div className=\"morseButtonContainer\">{listItems}</div>\n    </div>\n  );\n};\n\nMorseSelectionContainer.propTypes = {\n  columns: PropTypes.number\n};\n\nMorseSelectionContainer.defaultProps = {\n  columns: 1\n};\n\nexport default MorseSelectionContainer;\n","import React, {useEffect} from \"react\";\nimport \"./MorseSnackBar.css\";\nimport Button from \"./IconButton\";\nimport { FiX as CloseIcon } from \"react-icons/fi\";\n\nlet timeout;\n\nexport default function SnackBar({open, onClose, ...props}) {\n\n  useEffect(() => {\n    if (open) {\n      window.clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        onClose();\n      }, 5500);\n    } else {\n      window.clearTimeout(timeout);\n    }\n  }, [open]);\n\n  return (\n    <div \n      className={`MorseSnackBar ${open && 'show'}`}\n      onMouseEnter={() => {window.clearTimeout(timeout);}}\n      onMouseLeave={\n        () => {\n          if (open) {\n            timeout = setTimeout(() => {\n              onClose();\n              window.clearTimeout(timeout);\n            }, 5500);\n          }\n        }\n      }\n    >\n      {props.children}\n      <Button icon={CloseIcon} \n        onClick={() => onClose()}\n        tooltip={\"Close\"}\n        {...(!open && {tabindex: \"-1\"})}\n      />\n      </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./Stepper.css\";\nimport IconButton from \"./IconButton\";\nimport { FiChevronDown as downArw } from \"react-icons/fi\";\nimport { FiChevronUp as upArw } from \"react-icons/fi\";\nimport Input from \"./Input\";\nimport PropTypes from \"prop-types\";\n\nconst Stepper = ({\n  initialValue,\n  max,\n  min,\n  prompt,\n  valueDidChange,\n  visible\n}) => {\n\n  const validateValue = val => {\n    val = parseInt(Number(val));\n    if (min !== undefined) {\n      if (val < min) val = min;\n    }\n    if (max !== undefined) {\n      if (val > max) val = max;\n    }\n    return val;\n  };\n  \n  const [placeVal, setPlaceVal] = useState(validateValue(initialValue));\n  const [value, setValue] = useState(validateValue(initialValue));\n\n  const handleInputChange = event => {\n    setPlaceVal(event.target.value);\n  };\n\n  const handleInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitInputValue(event.target.value);\n    }\n  };\n\n  const handleInputBlur = () => {\n    submitInputValue(placeVal);\n  };\n\n  const submitInputValue = v => {\n    v = validateValue(placeVal);\n    setPlaceVal(v);\n    setValue(v);\n    valueDidChange(v);\n  };\n\n  return (\n    <div className={visible ? \"StepperContainer visible\" : \"StepperContainer\"}>\n      <IconButton\n        icon={downArw}\n        tooltip={\"Decrease Characters\"}\n        disabled={value === min}\n        onClick={() => {\n          const v = validateValue(value - 1);\n          setValue(v);\n          setPlaceVal(v);\n          valueDidChange(v);\n        }}\n      />\n      <Input\n        className=\"stepperInput\"\n        onChange={handleInputChange}\n        value={placeVal}\n        onBlur={handleInputBlur}\n        onKeyDown={handleInputKeyDown}\n        prompt={prompt}\n      />\n      <IconButton\n        icon={upArw}\n        tooltip={\"Increase Characters\"}\n        disabled={value === max}\n        onClick={() => {\n          const v = validateValue(value + 1);\n          setValue(v);\n          setPlaceVal(v);\n          valueDidChange(v);\n        }}\n      />\n    </div>\n  );\n};\n\nStepper.propTypes = {\n  initialValue: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number\n};\n\nexport default Stepper;\n","import React, { useState, useRef, useContext } from \"react\";\nimport \"./SpacingSelectionContainer.css\";\nimport SpacingButton from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useOutsideClick from \"../../services/useOutsideClick\";\nimport RandomSwitch from \"@material-ui/core/Switch\";\nimport AudioContext from \"../../context/AudioContext\";\nimport SpacingInput from \"../common/Input\";\nimport ThemeContext from \"../../context/ThemeContext\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    shadow: 0,\n    \"&\": {\n      boxShadow: \"none !important\"\n    },\n    \"&:hover\": {\n      boxShadow: \"none !important\"\n    },\n    textTransform: \"none\",\n    fontSize: \"13px\",\n    margin: \"none\",\n    marginRight: \"12px\",\n    marginBottom: \"20px\",\n    height: \"32px\",\n    width: \"auto\",\n    maxWidth: \"400px\",\n    marginTop: \"auto\",\n    padding: \"none\",\n    justifyContent: \"center\",\n    borderRadius: \"16px\",\n    fontWeight: \"500\",\n    lineHeight: \"12px\"\n  },\n  selectEmpty: {}\n}));\n\nconst validateSpacing = val => {\n  if (val === \"\") return 0;\n  val = Number.parseInt(val);\n  if (Number.isNaN(val)) return 10;\n  if (val < 0) return 0;\n  return val;\n};\n\nconst SpacingSelectionContainer = () => {\n\n  const ref = useRef();\n  useOutsideClick(ref, () => {\n    setShow(false);\n  });\n\n  const { getRandomSpacing, setRandomSpacing, getCharSpacing, setCharSpacing } = useContext(AudioContext);\n  const { dark } = useContext(ThemeContext);\n\n  const initialCharSpacing = getCharSpacing();\n  const [spacing, setSpacing] = useState(initialCharSpacing);\n  \n  const initialRandomSpacing = getRandomSpacing();\n  const [random, setRandom] = useState(initialRandomSpacing);\n\n  const [show, setShow] = useState(false);\n  const toggleShow = () => {\n    setShow(!show);\n  };\n\n  const toggleRandom = () => {\n    setRandom(prev => !prev);\n    setRandomSpacing(!random);\n  };\n\n  const handleCharSpacingInputChange = event => {\n    setSpacing(event.target.value);\n  };\n\n  const handleCharSpacingInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitCharSpacingInputValue(event.target.value);\n    }\n  };\n\n  const handleCharSpacingInputBlur = event => {\n    submitCharSpacingInputValue(validateSpacing(spacing));\n  };\n\n  const submitCharSpacingInputValue = v => {\n    v = validateSpacing(spacing);\n    setCharSpacing(v);\n    setSpacing(v);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div id=\"SpacingSelectionContainer\" ref={ref}>\n      <SpacingButton\n        id=\"spacingBtn\"\n        variant=\"outlined\"\n        className={classes.button}\n        onClick={toggleShow}\n        style={show ? {backgroundColor: \"#3ea6ff\", border: \"1px solid #3ea6ff\", ...!dark ? {color: \"#fff\"} : {color: \"#000\"}} : {}}\n      >\n        <span>{random ? \"Insert Spaces Randomly\" : getCharSpacing() !== 0 ? getCharSpacing() !== 1 ? `Insert Space Every ${getCharSpacing()} Characters`: \"Insert Space After Every Character\" : \"Don't Insert Any Spaces\"}</span>\n      </SpacingButton>\n      <div id=\"spacingPopover\" className={`${show ? \"show\" : \"\"} ${!random ? \"notRandom\" : \"\"}`}>\n        <div id=\"spacingSegmentTop\">\n          <span className=\"text\">Insert Spaces Randomly</span>\n          <RandomSwitch \n            checked={random}\n            onChange={toggleRandom}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }} />\n        </div>\n        <div id=\"spacingSegmentBottom\" className={`${!random ? \"notRandom\" : \"\"}`}>\n          <span>insert space every</span>\n          <SpacingInput\n            onChange={handleCharSpacingInputChange}\n            value={spacing}\n            onBlur={handleCharSpacingInputBlur}\n            onKeyDown={handleCharSpacingInputKeyDown}\n            tabentry={!random}\n          /><span>character{parseInt(spacing) === 1 ? '' : 's'}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpacingSelectionContainer;\n","import React, { useState, useRef, useContext } from \"react\";\nimport \"./DurationSelectionContainer.css\";\nimport DurationButton from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useOutsideClick from \"../../services/useOutsideClick\";\nimport AudioContext from \"../../context/AudioContext\";\nimport Button from \"@material-ui/core/Button\";\nimport DurationTypeBtnGrp from \"@material-ui/core/ButtonGroup\";\nimport Input from \"../common/Input\";\nimport ThemeContext from \"../../context/ThemeContext\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    shadow: 0,\n    \"&\": {\n      boxShadow: \"none !important\"\n    },\n    \"&:hover\": {\n      boxShadow: \"none !important\"\n    },\n    textTransform: \"none\",\n    fontSize: \"13px\",\n    margin: \"none\",\n    marginRight: \"12px\",\n    marginBottom: \"20px\",\n    height: \"32px\",\n    width: \"auto\",\n    maxWidth: \"400px\",\n    marginTop: \"auto\",\n    padding: \"none\",\n    justifyContent: \"center\",\n    borderRadius: \"16px\",\n    fontWeight: \"500\",\n    lineHeight: \"12px\"\n  },\n  grpButtonContainer: {\n    shadow: 0,\n    \"&\": {\n      boxShadow: \"none !important\"\n    },\n    \"&:hover\": {\n      boxShadow: \"none !important\"\n    },\n    marginTop: \"4px\",\n    borderRadius: \"6px\",\n    border: \"1px solid rgba(127, 127, 127, 0.23)\"\n  },\n  grpButton: {\n    shadow: 0,\n    \"&\": {\n      boxShadow: \"none !important\"\n    },\n    \"&:hover\": {\n      boxShadow: \"none !important\"\n    },\n    width: \"130px\",\n    height: \"28px\",\n    fontWeight: \"600\",\n    letterSpacing: \"1px\",\n    margin: \"0px\",\n    border: \"none\",\n    lineHeight: \"17px\"\n  },\n  selectEmpty: {}\n}));\n\nconst validateCharAmount = val => {\n  val = Number.parseInt(val);\n  if (Number.isNaN(val)) return 50;\n  if (val < 1) return 1;\n  return val;\n};\n\nconst validateTimeLimit = val => {\n  val = Number.parseFloat(val);\n  if (Number.isNaN(val)) return 1.0;\n  if (val <= 0.0) return 1.0;\n  return val;\n};\n\nconst DurationSelectionContainer = () => {\n\n  const { \n    getDurationMode,\n    setDurationMode,\n    getSessionTimeLimit,\n    setSessionTimeLimit,\n    getSessionCharAmount,\n    setSessionCharAmount\n  } = useContext(AudioContext);\n\n  const { dark } = useContext(ThemeContext);\n\n  const intialCharAmount = getSessionCharAmount();\n  const [charAmount, setCharAmount] = useState(intialCharAmount);\n\n  const handleCharAmountInputChange = event => {\n    setCharAmount(event.target.value);\n  };\n\n  const handleCharAmountInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitCharAmountInputValue(event.target.value);\n    }\n  };\n\n  const handleCharAmountInputBlur = event => {\n    submitCharAmountInputValue(validateCharAmount(charAmount));\n  };\n\n  const submitCharAmountInputValue = v => {\n    v = validateCharAmount(charAmount);\n    setSessionCharAmount(v);\n    setCharAmount(v);\n  };\n\n\n  const initialTimeLimit = getSessionTimeLimit();\n  const [timeLimit, setTimeLimit] = useState(initialTimeLimit);\n\n  const handleTimeLimitInputChange = event => {\n    setTimeLimit(event.target.value);\n  };\n\n  const handleTimeLimitInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitTimeLimitInputValue(event.target.value);\n    }\n  };\n\n  const handleTimeLimitInputBlur = event => {\n    submitTimeLimitInputValue(validateTimeLimit(timeLimit));\n  };\n\n  const submitTimeLimitInputValue = v => {\n    v = validateTimeLimit(timeLimit);\n    setSessionTimeLimit(v);\n    setTimeLimit(v);\n  };\n\n  const ref = useRef();\n  useOutsideClick(ref, () => {\n    setShow(false);\n  });\n  \n\n  const initDurationMode = parseInt(getDurationMode());\n  const [durationType, setDurationType ] = useState(initDurationMode);\n\n  const [show, setShow] = useState(false);\n  const toggleShow = () => {\n    setShow(!show);\n  };\n\n  function btnTimeLimitClicked() {\n    setDurationType(0);\n    setDurationMode(0);\n    submitCharAmountInputValue(validateCharAmount(charAmount));\n  }\n\n  function btnCharLimitClicked() {\n    setDurationType(1);\n    setDurationMode(1);\n    submitTimeLimitInputValue(validateTimeLimit(timeLimit));\n  }\n\n  const classes = useStyles();\n\n  return (\n    <div id=\"DurationSelectionContainer\" ref={ref}>\n      <DurationButton\n        id=\"durationBtn\"\n        variant=\"outlined\"\n        className={classes.button}\n        onClick={toggleShow}\n        style={show ? {backgroundColor: \"#3ea6ff\", border: \"1px solid #3ea6ff\", ...!dark ? {color: \"#fff\"} : {color: \"#000\"}} : {}}\n      >\n        <span>{`Session Duration: ${durationType === 0 ? `${getSessionTimeLimit()} minute${getSessionTimeLimit() === 1 ? '' : 's'}` : \n        `${getSessionCharAmount()} character${getSessionCharAmount() === 1 ? '' : 's'}`}`}</span>\n      </DurationButton>\n      <div id=\"durationPopover\" className={`${show ? \"show\" : \"\"}`}>\n        <div id=\"durationSegmentTop\">\n        <DurationTypeBtnGrp \n          aria-label=\"text primary button group\"\n          className={classes.grpButtonContainer}\n          style={{border: \"1px solid #3ea6ff\"}}\n        >\n          <Button \n            variant={durationType === 0 ? \"contained\" : \"text\"}\n            style={durationType === 0 ? {backgroundColor: \"#3ea6ff\", ...!dark ? {color: \"#fff\"} : {color: \"#000\"}} : {color: \"#3ea6ff\"}}\n            className={classes.grpButton} \n            onClick={btnTimeLimitClicked}>Time</Button>\n          <Button \n            variant={durationType === 1 ? \"contained\" : \"text\"} \n            style={durationType === 1 ? {backgroundColor: \"#3ea6ff\", ...!dark ? {color: \"#fff\"} : {color: \"#000\"}} : {color: \"#3ea6ff\"}}\n            className={classes.grpButton} \n            onClick={btnCharLimitClicked}>Characters</Button>\n        </DurationTypeBtnGrp>\n        </div>\n        <div \n          id=\"durationSegmentBottom\"\n          className={`${durationType === 0 ? \"time\" : \"chars\"}`}\n        >\n          <div id=\"timeSelectionPane\">\n            <span>time duration (minutes): </span>\n            <Input \n              onChange={handleTimeLimitInputChange}\n              value={timeLimit}\n              onBlur={handleTimeLimitInputBlur}\n              onKeyDown={handleTimeLimitInputKeyDown}\n              tabentry={durationType === 0}\n            />\n          </div>\n          <div id=\"charLimitSelectionPane\">\n            <span>number of characters: </span>\n            <Input \n              onChange={handleCharAmountInputChange}\n              value={charAmount}\n              onBlur={handleCharAmountInputBlur}\n              onKeyDown={handleCharAmountInputKeyDown}\n              tabentry={durationType === 1}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DurationSelectionContainer;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport \"./MorseSelectionContainer.css\";\nimport Panel from \"./MorseSelectionPanel\";\nimport { makeTranslatedObject } from \"../../services/morse/morse-translation\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CharStepper from \"../common/Stepper\";\nimport SpacingContainer from \"./SpacingSelectionContainer\";\nimport DurationContainer from \"./DurationSelectionContainer\";\nimport MorseSnackBar from \"../common/MorseSnackBar\";\nimport Button from \"../common/IconButton\";\nimport { FiPlayCircle  as PlayIcon } from \"react-icons/fi\";\nimport { FiStopCircle  as StopIcon } from \"react-icons/fi\";\nimport * as morsetrans from \"../../services/morse/morse-translation.js\";\nimport AudioContext from \"../../context/AudioContext\";\n\nconst charOrder = 'kmrsuaptlowi.njef0y,vg5/q9zh38b?427c1d6x=\\'\"!()&:;+-:@ÀÆĆĐĴĜŃØŠÞÜŹŻ';\nlet customChars = \"abc\";\nlet lastCount = 2;\n\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\nconst numbers = \"1234567890\";\nconst extended = \"ÀÆĆĐĴĜŃØŠÞÜŹŻ\";\nconst punctuation = '.,?\\'\"!/()&:;=+-:@';\n\nconst alphabetTrans = makeTranslatedObject(alphabet);\nconst numbersTrans = makeTranslatedObject(numbers);\nconst extendedTrans = makeTranslatedObject(extended);\nconst punctuationTrans = makeTranslatedObject(punctuation);\n\nconst storedCustomChars = window.localStorage.getItem(\"customChars\");\nif (storedCustomChars === null || storedCustomChars === undefined || typeof storedCustomChars != \"string\") {\n  customChars = \"abc\";\n  window.localStorage.setItem(\"customChars\", \"abc\");\n} else {\n  customChars = storedCustomChars;\n}\n\nfunction getValidCount(c) {\n  if (c === null || c === undefined || Number.isNaN(c)) {\n    return 2;\n  } else if (c < 2) {\n    return 2;\n  } else if (c > charOrder.length) {\n    return charOrder.length;\n  }\n  return Number(c);\n}\nconst storedCharCount = window.localStorage.getItem(\"charCount\");\nlastCount = getValidCount(storedCharCount);\nwindow.localStorage.setItem(\"charCount\", lastCount);\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 120,\n    marginRight: \"20px\",\n    marginBottom: \"20px\",\n    fontWeight: \"500\"\n  },\n  menuItem: {\n    fontWeight: \"500\"\n  },\n  selectEmpty: {}\n}));\n\nconst MorseSelectionContainer = ({ selectedChars, selectedCharsDidChange, show, disabled }) => {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    selection: 0,\n    openSB: false\n  });\n\n  const {play, stop, isPlaying} = useContext(AudioContext);\n  const [playing, setPlaying] = useState(false);\n\n  useEffect(() => {\n    selectedCharsDidChange(charOrder.substring(0, lastCount));\n  }, []);\n\n  const handleCloseSB = () => {\n    setState(prevState => ({ ...prevState, openSB: false }));\n  };\n\n  const handleDropDownChange = event => {\n    setState(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n    if (event.target.name === \"selection\") {\n      setState(prevState => ({ selection: event.target.value }));\n      selectedCharsDidChange(\n        event.target.value === 0\n          ? charOrder.substring(0, lastCount)\n          : customChars\n      );\n    }\n    window.localStorage.setItem(\"selectionMode\", event.target.value);\n  };\n\n  function charCountDidChange(count) {\n    if (count - lastCount === 1) {\n      setState(prevState => ({ ...prevState, openSB: true }));\n    } else {\n      setState(prevState => ({ ...prevState, openSB: false }));\n    }\n    lastCount = count;\n    selectedCharsDidChange(charOrder.substring(0, count));\n    window.localStorage.setItem(\"charCount\", count);\n  }\n\n  function addCustomChars(chars) {\n    for (let i = 0; i < chars.length; i++) {\n      if (!customChars.includes(chars.charAt(i))) {\n        customChars += chars.charAt(i);\n      }\n    }\n    selectedCharsDidChange(customChars);\n    window.localStorage.setItem(\"customChars\", customChars);\n  }\n\n  function removeCustomChars(chars) {\n    for (let i = 0; i < chars.length; i++) {\n      if (customChars.includes(chars.charAt(i))) {\n        customChars = customChars.replace(chars.charAt(i), \"\");\n      }\n    }\n    selectedCharsDidChange(customChars);\n    window.localStorage.setItem(\"customChars\", customChars);\n  }\n\n  return (\n    <div id=\"MorseSelectionContainer\" className={show ? \"show\" : \"\"}>\n      <h3 style={{fontSize: \"24px\"}}>Selected Morse Characters: {selectedChars.length}</h3>\n      <div id=\"selectionOptions\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"selection-simple\" color=\"primary\">\n            char. selection\n          </InputLabel>\n          <Select\n            MenuProps={{\n              disableScrollLock: true\n            }}\n            value={state.selection}\n            onChange={handleDropDownChange}\n            inputProps={{\n              name: \"selection\",\n              id: \"selection-simple\"\n            }}\n            color=\"primary\"\n          >\n            <MenuItem value={0} className={classes.menuItem}>Ordered</MenuItem>\n            <MenuItem value={1} className={classes.menuItem}>Custom</MenuItem>\n          </Select>\n        </FormControl>\n        <DurationContainer style={{paddingBottom: \"20px\"}} />\n        <SpacingContainer style={{paddingBottom: \"20px\"}} />\n        <CharStepper\n          initialValue={lastCount}\n          min={2}\n          max={charOrder.length}\n          prompt=\"characters\"\n          valueDidChange={charCountDidChange}\n          visible={state.selection === 0 ? true : false}\n        />\n      </div>\n      <div id=\"innerSelectionContainer\">\n        <Panel\n          title=\"alphabet\"\n          columns={2}\n          characters={alphabet}\n          translation={alphabetTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"numbers\"\n          characters={numbers}\n          translation={numbersTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"extended\"\n          characters={extended}\n          translation={extendedTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"punctuation\"\n          columns={2}\n          characters={punctuation}\n          translation={punctuationTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n      </div>\n      <MorseSnackBar\n        open={state.openSB}\n        onClose={handleCloseSB}\n      >\n        <div>\n          <Button \n            icon={playing ? StopIcon : PlayIcon}\n            tooltip={playing ? \"Stop\" : \"Play\"}\n            size={\"large\"}\n            onClick={() => \n              {\n                if (isPlaying() === false) {\n                  play(morsetrans.translateTextToMorse(charOrder[lastCount - 1]), () => {\n                    setPlaying(false);\n                  });\n                  setPlaying(true);\n                } else {\n                  stop();\n                }\n              }\n            }\n            {...(!state.openSB && {tabentry: false})}\n          />\n          <div className=\"msbTextContainer\">\n            <span className=\"msbTitle\">Latest Addition:</span>\n            <div>\n              <span className=\"msbChar\">{charOrder[lastCount - 1].toUpperCase()}</span>\n              <span className=\"msbMorse\">{morsetrans.translateTextToMorse(charOrder[lastCount - 1]).replace(/-/g, \"−\").replace(/\\./g, \"·\")}</span>\n            </div>\n          </div>\n        </div>\n      </MorseSnackBar>\n    </div>\n  );\n};\n\nexport default MorseSelectionContainer;\n","import React from \"react\";\nimport \"./SessionButton.css\";\n\nconst SessionButton = ({Icon, label, actionType, onClick}) => {\n\n  let actnType = \"\";\n  switch(actionType) {\n    case \"abort\":\n      actnType = \"abort\";\n      break;\n    case \"restart\":\n      actnType = \"restart\";\n      break;\n    case \"go\":\n      actnType = \"go\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className={`sessionButton ${actnType}`} onClick={onClick}>\n        <Icon className={\"sessionButtonIcon\"} /><span>{label}</span>\n    </div>\n  );\n};\n\nexport default SessionButton;\n","import React, {useRef, useLayoutEffect, useContext} from \"react\";\nimport \"./TrainerSessionContainer.css\";\nimport AbortBtn from \"./SessionButton\";\nimport AbortIcon from \"@material-ui/icons/Close\";\nimport RefreshBtn from \"./SessionButton\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport AudioContext from \"../../context/AudioContext\";\n\nconst TrainerSessionContainer = ({ abortClicked, restartClicked, inSession, didChangeText, totalDuration = 10, startDelay = 0.5 }) => {\n  const textareaRef = useRef();\n\n  const { getProgressBar } = useContext(AudioContext);\n\n  useLayoutEffect(() => {\n    if (textareaRef !== undefined) {\n      textareaRef.current.focus();\n      textareaRef.current.value = \"\";\n    }\n  });\n\n  return (\n    <div\n      id=\"TrainerSessionContainer\"\n      className={`${inSession ? \"inSession\" : \"\"}`}\n    >\n      <div id=\"trainerOverlay\"/>\n      <div id=\"sessionOptionContainer\">\n        <AbortBtn actionType={\"abort\"} label=\"Abort\" Icon={AbortIcon} onClick={abortClicked} />\n        <RefreshBtn label=\"Restart\" Icon={RefreshIcon} onClick={() => {\n          restartClicked()\n        }} />\n      </div>\n      <div id=\"sessionTextareaContainer\">\n        <div id=\"sessionProgressBar\"\n          style={ inSession ? { transitionDuration: `${totalDuration - (totalDuration * 0.005)}s`, transitionDelay: `${startDelay}s`, width: \"100%\", visibility: getProgressBar() ? \"visible\" : \"hidden\"} : {}}\n        />\n        <textarea \n          ref={textareaRef}\n          spellCheck={false}\n          readOnly={!inSession}\n          onChange={didChangeText}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TrainerSessionContainer;\n","import * as morsetrans from \"../morse/morse-translation.js\";\n\n\nexport function createScriptFromChars(chars, options = undefined) {\n\n  let \n    script = \"\",\n    durationType = 0,\n    totalTime = 0.05,\n    dotLength = 0.0,\n    dashLength = 0.0,\n    pauseLength = 0.0,\n    spaceLength = 0.0,\n    overallSpeed = 15.0,\n    charSpeed = 18.0,\n    charLimit = 30, \n    randomSpacing = true, \n    charSpacing = null, \n    spaceCountdown = 0, \n    durationTime = 60;\n\n  function setOptions(options) {\n    if (options !== undefined) {\n      if (\"durationType\" in options) {\n        durationType = options[\"durationType\"];\n      }\n      if (\"durationTime\" in options) {\n        durationTime = options[\"durationTime\"] * 60.0;\n      }\n      if (\"charLimit\" in options) {\n        charLimit = options[\"charLimit\"];\n      }\n      if (\"randomSpacing\" in options) {\n        randomSpacing = options[\"randomSpacing\"];\n      }\n      if (\"charSpacing\" in options) {\n        charSpacing = options[\"charSpacing\"];\n      }\n      if (\"overallSpeed\" in options) {\n        overallSpeed = parseFloat(options[\"overallSpeed\"]);\n      }\n      if (\"charSpeed\" in options) {\n        charSpeed = parseFloat(options[\"charSpeed\"]);\n      }\n    }\n  }\n\n  function setSpeedElements() {\n    if (charSpeed < 1 || overallSpeed < 1) return;\n    if (charSpeed < overallSpeed) {\n      charSpeed = overallSpeed;\n    }\n    dotLength = 1.2 / charSpeed;\n    dashLength = dotLength * 3.0;\n    const farns =\n      (60.0 * charSpeed - 37.2 * overallSpeed) / (overallSpeed * charSpeed);\n    pauseLength = (3.0 * farns) / 19.0 - dotLength;\n    spaceLength = (7.0 * farns) / 19.0 - dotLength;\n  }\n\n  const setSpacing = () => {\n    if (randomSpacing) {\n      spaceCountdown = Math.floor(Math.random() * (charLimit / (Math.random() * charLimit / 2) + 1)) + (Math.floor(Math.random() * 3) + 1);\n    } else  {\n      spaceCountdown = charSpacing;\n    }\n  }\n\n  const appendTime = c => {\n    let morseTrans = morsetrans.translateTextToMorse(c);\n  \n    if (c === \" \" ) {\n      totalTime += spaceLength - pauseLength;\n    } else {\n      morseTrans.split(\"\").forEach(function(char) {\n        if (char === \" \") {\n          totalTime += pauseLength;\n        } else {\n          switch (char) {\n            case \".\":\n              totalTime += dotLength;\n              break;\n            case \"-\":\n              totalTime += dashLength;\n              break;\n            default:\n              totalTime += 0;\n              break;\n          }\n          totalTime += dotLength;\n        }\n      });\n    }\n  }\n\n  setOptions(options);\n  setSpacing();\n  setSpeedElements();\n\n  let i = 0;\n  while ((durationType === 1 && i < charLimit) || (durationType === 0 && totalTime < durationTime)) {\n    if (charSpacing === 0) {\n      spaceCountdown = 1;\n    }\n    if (spaceCountdown < 1 && i > 0 && i < charLimit) {\n      script += \" \";\n      setSpacing();\n    } else {\n      script += chars.charAt(Math.floor(Math.random() * chars.length));\n      spaceCountdown--;\n      i = durationType === 1 ? i + 1 : 1;\n    }\n    appendTime(script.slice(-1));\n  }\n  if (script.slice(-1) !== ' ') {\n    totalTime -= pauseLength;\n  } else {\n    totalTime -= spaceLength + pauseLength;\n  }\n  const composition = {\n    script: script.trim(),\n    totalDuration: totalTime\n  }\n  return composition;\n}\n\nexport function createScriptFromTextEntry(textEntry, options = undefined) {\n\n  let \n    script = \"\",\n    totalTime = 0.05,\n    dotLength = 0.0,\n    dashLength = 0.0,\n    pauseLength = 0.0,\n    spaceLength = 0.0,\n    overallSpeed = 15.0,\n    charSpeed = 18.0,\n    playMode = 0,\n    lineLimit = 1;\n\n  function setOptions(options) {\n    if (options !== undefined) {\n      if (\"overallSpeed\" in options) {\n        overallSpeed = parseFloat(options[\"overallSpeed\"]);\n      }\n      if (\"charSpeed\" in options) {\n        charSpeed = parseFloat(options[\"charSpeed\"]);\n      }\n      if (\"playMode\" in options) {\n        playMode = parseInt(options[\"playMode\"]);\n      }\n      if (\"lineLimit\" in options) {\n        lineLimit = parseInt(options[\"lineLimit\"]);\n      }\n    }\n  }\n\n  function setSpeedElements() {\n    if (charSpeed < 1 || overallSpeed < 1) return;\n    if (charSpeed < overallSpeed) {\n      charSpeed = overallSpeed;\n    }\n    dotLength = 1.2 / charSpeed;\n    dashLength = dotLength * 3.0;\n    const farns =\n      (60.0 * charSpeed - 37.2 * overallSpeed) / (overallSpeed * charSpeed);\n    pauseLength = (3.0 * farns) / 19.0 - dotLength;\n    spaceLength = (7.0 * farns) / 19.0 - dotLength;\n  }\n\n  const calculateTotalTime = str => {\n    totalTime = 0.05;\n    const trans = morsetrans.formatMorse(morsetrans.translateTextToMorse(str));\n    trans.split(\"\").forEach(function(char) {\n      if (char === \" \") {\n        totalTime += pauseLength;\n      } else if (char === \"/\") {\n        totalTime += spaceLength;\n      } else {\n        switch (char) {\n          case \".\":\n            totalTime += dotLength;\n            break;\n          case \"-\":\n            totalTime += dashLength;\n            break;\n          default:\n            break;\n        }\n        totalTime += dotLength;\n      }\n    });\n  }\n\n  setOptions(options);\n  setSpeedElements();\n\n  if (playMode === 0 ) {\n    script = textEntry\n    .replace(/(\\r\\n)/gm, \" \")\n    .replace(/\\n/gm, \" \")\n    .replace(/\\r/gm, \" \")\n    .replace(/^\\s+/g, \"\")\n    .replace(/[ \\t]{2,}/g, \" \");\n    script = script.trim();\n  } else {\n    let lines = textEntry.split(/\\r?\\n/);\n    lines.forEach((l, index) => {\n      lines[index] = lines[index].replace(/[ \\t]{2,}/g, \" \").trim();\n    });\n    for (let x = 0; x < lines.length; x++) {\n      if (lines[x].match(/^\\s*$/)) {\n        lines.splice(x, 1);\n        x--;\n      }\n    }\n    const linesCopy = [...lines];\n    let selectedLines = [];\n    for (let i = 0; i < lineLimit; i++) {\n      const lineNo = Math.floor(Math.random() * lines.length);\n      selectedLines.push(lines[lineNo]);\n      lines.splice(lineNo, 1);\n      if (lines.length === 0) {\n        lines = [...linesCopy];\n      }\n    }\n    script = selectedLines.join(\" \");\n  }\n\n  calculateTotalTime(script);\n\n  const composition = {\n    script: script.trim(),\n    totalDuration: totalTime\n  }\n  return composition;\n}\n\nexport default {\n  createScriptFromChars,\n  createScriptFromTextEntry\n};","export function getResult(a, b) {\n  const m = a.length, n = b.length;\n  const distanceMatrix = Array(n + 1).fill(null).map(() => Array(m + 1).fill(null));\n  for (let i = 0; i <= m; i += 1) {\n    distanceMatrix[0][i] = i;\n  }\n  for (let j = 0; j <= n; j += 1) {\n    distanceMatrix[j][0] = j;\n  }\n\n  for (let j = 1; j <= n; j += 1) {\n    for (let i = 1; i <= m; i += 1) {\n      const indicator = a[i - 1] === b[j - 1] ? 0 : 1;\n      distanceMatrix[j][i] = Math.min(\n        distanceMatrix[j][i - 1] + 1,\n        distanceMatrix[j - 1][i] + 1,\n        distanceMatrix[j - 1][i - 1] + indicator\n      );\n    }\n  }\n\n  let x = n, y = m, step, err = \"\", err2 = \"\", hits = {}, misses = {}, subs = {}, extra = {},\n  mistakesPresent = false, missesPresent = false, extraPresent = false;\n\n  while (x > 0 && y > 0) {\n    step = Math.min(distanceMatrix[x - 1][y - 1], distanceMatrix[x - 1][y], distanceMatrix[x][y - 1]);\n    if (distanceMatrix[x][y] === step) {\n      err += \"+\";\n      err2 += \"+\";\n      x--;\n      y--;\n      hits[a.charAt(y)] = hits[a.charAt(y)] + 1 || 1;\n    } else if (distanceMatrix[x - 1][y] === step) { // deletion / extra\n      err2 += \"e\";\n      x--;\n      extra[b.charAt(x)] = extra[b.charAt(x)] + 1 || 1;\n      extraPresent = true;\n    } else if (distanceMatrix[x][y - 1] === step) { // insertion / missing\n      err += \"m\";\n      y--;\n      misses[a.charAt(y)] = misses[a.charAt(y)] + 1 || 1;\n      missesPresent = true;\n    } else { // substitution\n      err += \"s\";\n      err2 += \"s\";\n      x--;\n      y--;\n      subs[a.charAt(y)] = subs[a.charAt(y)] + 1 || 1;\n      subs[b.charAt(x)] = subs[b.charAt(x)] + 1 || 1;\n      mistakesPresent = true;\n    }\n  }\n  while (x > 0) { // too many pre-pended\n    err2 += \"e\";\n    x--;\n    extra[b.charAt(x)] = extra[b.charAt(x)] + 1 || 1;\n    extraPresent = true;\n  }\n  while (y > 0) { // too many appended\n    err += \"m\";\n    y--;\n    misses[a.charAt(y)] = misses[a.charAt(y)] + 1 || 1;\n    missesPresent = true;\n  }\n\n  // create stats\n  let uniqueChars = [];\n  for (let u = 0; u < a.length; u++) {\n    const c = a.charAt(u);\n    if (!uniqueChars.includes(c)) {\n      uniqueChars[uniqueChars.length] = c;\n    }\n  }\n  for (let u = 0; u < b.length; u++) {\n    const c = b.charAt(u);\n    if (!uniqueChars.includes(c)) {\n      uniqueChars[uniqueChars.length] = c;\n    }\n  }\n  uniqueChars = uniqueChars.sort();\n  let stats = [];\n  for (let i = 0; i < uniqueChars.length; i++) {\n    const acount = a.split(uniqueChars[i]).length - 1;\n    let obj = {};\n    obj[\"char\"] = uniqueChars[i] === \" \" ? \"[space]\" : uniqueChars[i].toUpperCase();\n    obj[\"wrong\"] = subs[uniqueChars[i]] || 0;\n    obj[\"misses\"] = misses[uniqueChars[i]] || 0;\n    obj[\"extra\"] = extra[uniqueChars[i]] || 0;\n    obj[\"hits\"] = hits[uniqueChars[i]] || 0;\n    obj[\"overall\"] = Math.floor((obj[\"hits\"] / (acount + obj[\"extra\"])) * 100) || 0;\n    stats[i] = obj;\n  }\n\n  const results = {\n    errors: distanceMatrix[n][m],\n    errorPlacements: err.split(\"\").reverse().join(\"\").substring(0, m),\n    errorPlacements2: err2.split(\"\").reverse().join(\"\").substring(0, n),\n    hits: hits,\n    misses: misses,\n    extra: extra,\n    stats: stats,\n    mistakesPresent: mistakesPresent,\n    missesPresent: missesPresent,\n    extraPresent: extraPresent\n  }\n\n  return results;\n}\n\nexport default {\n  getResult\n};\n\n","import React, {useEffect, useContext} from \"react\";\nimport \"./SessionReviewContainer.css\";\nimport CloseBtn from \"./SessionButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport RetryBtn from \"./SessionButton\";\nimport RetryIcon from \"@material-ui/icons/Refresh\";\nimport Marker from \"../../services/trainer/marker\";\nimport AudioContext from \"../../context/AudioContext\";\n\nlet overallScore, \n  noOfErrors, \n  stats = [], \n  latestResults, \n  scriptText, \n  resultText, \n  mistakesPresent, \n  missesPresent, \n  extraPresent;\n\nconst getResultType = c => {\n  let resultType;\n    switch (c) {\n      case \"m\":\n        resultType=\"result_text result_missed\";\n        break;\n      case \"s\":\n        resultType=\"result_text result_sub\";\n        break;\n      case \"e\":\n        resultType=\"result_text result_extra\";\n        break;\n      default:\n        resultType=\"result_text\";\n        break;\n    }\n    return resultType;\n}\n\nconst SessionReviewContainer = ({latestScript, latestAnswer, visible, closeResultsClicked, retryClicked}) => {\n  \n  const {playReviewSound} = useContext(AudioContext);\n\n  useEffect(() => {\n    if (visible) {\n      latestResults = Marker.getResult(latestScript, latestAnswer.trim().toLowerCase());\n      stats = latestResults.stats;\n      noOfErrors = latestResults.errors;\n      overallScore = Math.floor((((latestScript.length - noOfErrors) > 0 ? latestScript.length - noOfErrors : 0) / latestScript.length) * 100);\n      scriptText = latestScript.split(\"\").map((c, index) =>\n        <span key={index} className={`${getResultType(latestResults.errorPlacements.charAt(index))}`}>{c}</span>\n      );\n      resultText = latestAnswer.split(\"\").map((c, index) =>\n        <span key={index} className={`${getResultType(latestResults.errorPlacements2.charAt(index))}`}>{c}</span>\n      );\n      mistakesPresent = latestResults.mistakesPresent;\n      missesPresent = latestResults.missesPresent;\n      extraPresent = latestResults.extraPresent;\n      if (overallScore < 90) {\n        playReviewSound(2);\n      } else {\n        if (overallScore < 100) {\n          playReviewSound(1);\n        } else {\n          playReviewSound(0);\n        }\n      }\n    }\n  }, [visible]);\n\n  let transcriptKey; \n  if (mistakesPresent || missesPresent) {\n    transcriptKey = \n    <div className=\"reviewKeyContainer\">\n      {mistakesPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle red\" /><span className=\"keyText\">mistake</span></div>}\n      {missesPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle yellow\" /><span className=\"keyText\">missed</span></div>}\n    </div>;\n  }\n\n  let userInputKey;\n  if (mistakesPresent || extraPresent) {\n    userInputKey = \n    <div className=\"reviewKeyContainer\">\n      {mistakesPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle red\" /><span className=\"keyText\">mistake</span></div>}\n      {extraPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle yellow\" /><span className=\"keyText\">extra</span></div>}\n    </div>;\n  }\n\n  return (\n    <div\n      id=\"SessionReviewContainer\"\n      className={`${visible ? \"visible\" : \"\"}`}\n    >\n      <div id=\"reviewOptionContainer\">\n        <div id=\"reviewOptionContent\">\n          <CloseBtn actionType={\"abort\"} label=\"Close\" Icon={CloseIcon} onClick={closeResultsClicked} />\n          <RetryBtn label=\"Retry\" Icon={RetryIcon} onClick={retryClicked} />\n        </div>\n      </div>\n      <div id=\"sessionReviewContent\">\n        <div id=\"sessionReviewStatsContainer\">\n          <div id=\"sessionReviewHeader\"><p>{(overallScore < 1 && Object.keys(latestResults.hits).length > 0) ? \"<1\" : overallScore}%</p><p>{noOfErrors} error{noOfErrors === 1 ? \"\" : \"s\"}</p></div>\n          <div id=\"sessionReviewStatsPanel\"></div>\n          <table>\n            <tbody>\n              <tr><th></th><th>overall</th><th>hit</th><th>mistake</th><th>miss</th><th>extra</th></tr>\n              {stats.map(r => (\n                <tr key={r[\"char\"]}>\n                  <td>{r[\"char\"]}</td>\n                  <td>{r[\"overall\"]}%</td>\n                  <td>{r[\"hits\"]}</td>\n                  <td className={`${!r[\"wrong\"] ? \"resultTableZero\" : \"\"}`}>{r[\"wrong\"]}</td>\n                  <td className={`${!r[\"misses\"] ? \"resultTableZero\" : \"\"}`}>{r[\"misses\"]}</td>\n                  <td className={`${!r[\"extra\"] ? \"resultTableZero\" : \"\"}`}>{r[\"extra\"]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div id=\"sessionTextReviewContainer\">\n          <div className=\"sessionTextReviewPanel\"><p className=\"sessionTextReviewHeader\">sent transcript</p>{transcriptKey}{scriptText}</div>\n          <div className=\"sessionTextReviewPanel\"><p className=\"sessionTextReviewHeader\">user entry</p>{userInputKey}{resultText}</div>\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SessionReviewContainer;\n","import React, { useState, useRef, useContext } from \"react\";\nimport \"./TextEntryModeContainer.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useOutsideClick from \"../../services/useOutsideClick\";\nimport Switch from \"@material-ui/core/Switch\";\nimport AudioContext from \"../../context/AudioContext\";\nimport Input from \"../common/Input\";\nimport ThemeContext from \"../../context/ThemeContext\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    shadow: 0,\n    \"&\": {\n      boxShadow: \"none !important\"\n    },\n    \"&:hover\": {\n      boxShadow: \"none !important\"\n    },\n    textTransform: \"none\",\n    fontSize: \"13px\",\n    margin: \"none\",\n    marginRight: \"12px\",\n    marginBottom: \"20px\",\n    height: \"32px\",\n    width: \"auto\",\n    maxWidth: \"400px\",\n    marginTop: \"4px\",\n    padding: \"none\",\n    justifyContent: \"center\",\n    borderRadius: \"16px\",\n    fontWeight: \"500\",\n    lineHeight: \"12px\"\n  },\n  selectEmpty: {}\n}));\n\nconst validateLimit = val => {\n  if (val === \"\") return 1;\n  val = Number.parseInt(val);\n  if (Number.isNaN(val)) return 1;\n  if (val < 1) return 1;\n  return val;\n};\n\nconst TextEntryModeContainer = () => {\n\n  const ref = useRef();\n  useOutsideClick(ref, () => {\n    setShow(false);\n  });\n\n  const { \n    getFullTextMode,\n    setFullTextMode,\n    getTextLineLimit,\n    setTextLineLimit\n  } = useContext(AudioContext);\n\n  const { dark } = useContext(ThemeContext);\n\n  const initialLineLimit = getTextLineLimit();\n  const [lineLimit, setLineLimit] = useState(initialLineLimit);\n  \n  const initialFullTextMode = getFullTextMode();\n  const [textMode, setTextMode] = useState(initialFullTextMode);\n\n  const [show, setShow] = useState(false);\n  const toggleShow = () => {\n    setShow(!show);\n  };\n\n  const toggleFullText = () => {\n    setTextMode(textMode === 0 ? 1 : 0);\n    setFullTextMode(textMode === 0 ? 1 : 0);\n  };\n\n  const handleLineLimitInputChange = event => {\n    setLineLimit(event.target.value);\n  };\n\n  const handleLineLimitInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitLineLimitInputValue(event.target.value);\n    }\n  };\n\n  const handleLineLimitInputBlur = event => {\n    submitLineLimitInputValue(validateLimit(lineLimit));\n  };\n\n  const submitLineLimitInputValue = v => {\n    setTextLineLimit(v);\n    setLineLimit(v);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div id=\"textEntryModeContainer\" ref={ref}>\n      <Button\n        id=\"textEntryModeBtn\"\n        variant=\"outlined\"\n        className={classes.button}\n        onClick={toggleShow}\n        style={show ? {backgroundColor: \"#3ea6ff\", border: \"1px solid #3ea6ff\", ...!dark ? {color: \"#fff\"} : {color: \"#000\"}} : {}}\n      >\n        <span>{textMode === 0 ? \"Play the Whole Text\" : getTextLineLimit() !== 1 ? `Play ${getTextLineLimit()} Random Lines From Text`: \"Play a Single Random Line From Text\"}</span>\n      </Button>\n      <div id=\"textEntryModePopover\" className={`${show ? \"show\" : \"\"} ${textMode === 1 ? \"notFullText\" : \"\"}`}>\n        <div id=\"teModeSegmentTop\">\n          <span className=\"text\">Play the Whole Text</span>\n          <Switch \n            checked={textMode === 0}\n            onChange={toggleFullText}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </div>\n        <div id=\"teModeSegmentBottom\" className={`${textMode === 1 ? \"notFullText\" : \"\"}`}>\n          <span>play</span>\n          <Input\n            onChange={handleLineLimitInputChange}\n            value={lineLimit}\n            onBlur={handleLineLimitInputBlur}\n            onKeyDown={handleLineLimitInputKeyDown}\n            tabentry={textMode === 1}\n          /><span>random line{parseInt(lineLimit) === 1 ? '' : 's'} from text</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TextEntryModeContainer;\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from \"react\";\nimport \"./MorseTextEntry.css\";\nimport AudioContext from \"../../context/AudioContext\";\nimport Button from \"../common/IconButton\"\nimport { FiTrash2 as trashIcon } from \"react-icons/fi\";\nimport MorseSnackBar from \"../common/MorseSnackBar\";\nimport TextEntryMode from \"./TextEntryModeContainer\";\n\nlet binPressed = false;\n\nconst MorseTextEntry = ({show, value, didChangeText, inSession, source, inReview}) => {\n\n  const textareaRef = useRef();\n  const {getTextEntryString} = useContext(AudioContext);\n\n  const [openSB, setOpenSB] = useState(false);\n\n  useEffect(() => {\n    if (!(binPressed || inSession || source === 0)) textareaRef.current.focus();\n    binPressed = false;\n    if (source === 1) window.scrollTo(0, 0);\n  });\n\n  useLayoutEffect(() => {\n    if (!(binPressed || inSession || source === 0)) textareaRef.current.focus();\n    binPressed = false;\n  });\n\n  useEffect(() => {\n    if (show) {\n      document.body.classList.add('block-scroll');\n    } else {\n      document.body.classList.remove('block-scroll');\n    }\n    if (textareaRef !== undefined && textareaRef.current.value.length < 2) {\n      textareaRef.current.focus();\n    }\n    textareaRef.current.focus();\n    textareaRef.current.value = getTextEntryString();\n    return () => {\n      document.body.classList.remove('block-scroll');\n    }\n  }, [show]);\n\n  function clearTextBtnPressed() {\n    binPressed = true;\n    textareaRef.current.value = \"\";\n    didChangeText(textareaRef.current.value);\n  }\n\n  const handleTextChange = event => {\n    let s = event.target.value.toString().toLowerCase();\n    if (s === \"\" || /^[\\s0-9A-Za-z.,=/?\"'!()&:;+-:@àæćđĵĝńøšþüźż]+$/.test(s)) {\n      event.target.value = s;\n    } else {\n      s = s.replace(/[^\\s\\n\\r0-9A-Za-z.,=/?\"'!()&:;+-:@àæćđĵĝńøšþüźż]/g, \"\");\n      event.target.value = s;\n      setOpenSB(true);\n    }\n    didChangeText(s);\n    textareaRef.current.focus();\n  }\n\n  const handleCloseSB = () => {\n    setOpenSB(false);\n  };\n\n  return (\n    <div id=\"MorseTextEntry\" className={show ? \"show\" : \"\"}>\n      <div id=\"TextEntryOptionsContainer\">\n        <TextEntryMode />\n        <Button \n          icon={trashIcon}\n          tooltip={\"Clear\"}\n          onClick={clearTextBtnPressed}\n        />\n      </div>\n      <div id=\"MorseTextEntryTFContainer\">\n        <textarea\n          ref={textareaRef}\n          placeholder=\"Enter text here...\"\n          value={value}\n          onChange={handleTextChange}\n          disabled={inSession || inReview || source === 0}\n        />\n      </div>\n      <MorseSnackBar\n        open={openSB}\n        onClose={handleCloseSB}\n      >\n        <span style={{padding: \"10px\", color: \"var(--text)\"}}>Non-morse characters have been filtered out.</span>\n      </MorseSnackBar>\n    </div>\n  );\n};\n\nexport default MorseTextEntry;\n","import React, { useState, useContext, useEffect} from \"react\";\nimport \"./TrainerContainer.css\";\nimport Launcher from \"./TrainerLauncher\";\nimport MorseSelection from \"./MorseSelectionContainer\";\nimport TrainerSessionContainer from \"./TrainerSessionContainer\";\nimport AudioContext from \"../../context/AudioContext\";\nimport Composer from \"../../services/trainer/composer\";\nimport SessionReviewContainer from \"./SessionReviewContainer\";\nimport MorseTextEntry from \"./MorseTextEntry\";\n\nlet noChars = false;\nlet doNotMark = false;\nlet restartRequired = false;\nlet textEntryString = \"\";\n\nlet latestComposition = {script: \"\", totalDuration: 0};\nlet latestAnswer = \"\";\n\nconst TrainerContainer = () => {\n  document.title = \"MorseT - Trainer\";\n\n  const { \n    playText,\n    stop,\n    isPlaying,\n    getPreDelay,\n    getPostDelay,\n    getDurationMode,\n    getSessionTimeLimit,\n    getSessionCharAmount,\n    getRandomSpacing,\n    getCharSpacing,\n    getSpeed,\n    getSessionSource,\n    setSessionSource,\n    getTextEntryString,\n    setTextEntryString,\n    getFullTextMode,\n    getTextLineLimit\n  } = useContext(AudioContext);\n\n  const [state, setState] = useState({\n    selectedChars: \"\",\n    source: getSessionSource(),\n    inSession: false,\n    showResults: false,\n    textEntryIsEmpty: true\n  });\n\n  const keyPress = event => {\n    if (event.keyCode === 27) {\n      stop();\n      doNotMark = true;\n      setState(prevState => ({ ...prevState, inSession: false, showResults: false }));\n    }\n    if ((event.ctrlKey || event.metaKey) && event.which === 13) {\n      if (state.inSession === false) {\n        beginSession();\n      }\n    }\n  };\n\n  noChars = state.source === 0 ? state.selectedChars.length > 0 ? false : true : state.textEntryIsEmpty;\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyPress, false);\n    return () => {\n      document.removeEventListener(\"keydown\", keyPress, false);\n    };\n  });\n\n  useEffect(() => {\n    if (restartRequired) {\n      restartRequired = false;\n      beginSession();\n    }\n  }, [state.showResults])\n\n  useEffect(() => {\n    if (state.inSession || state.showResults) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"scroll\";\n    }\n    return () => {\n      document.body.style.overflow = \"scroll\";\n    }\n  }, [state.inSession, state.showResults]);\n\n  useEffect(() => {\n    textEntryString = getTextEntryString();\n    if (textEntryString.length > 0) setState(prevState => ({ ...prevState, textEntryIsEmpty: false }));\n  }, []);\n  \n\n  function selectedCharsDidChange(chars) {\n    setState(prevState => ({ ...prevState, selectedChars: chars }));\n  }\n\n  function beginWasClicked() {\n    beginSession();\n  }\n\n  function beginSession() {\n    if (isPlaying() === false) {\n      latestAnswer = \"\";\n      const speeds = getSpeed();\n      setState(prevState => ({ ...prevState, inSession: true, showResults: false }));\n      latestComposition = state.source === 0 ? Composer.createScriptFromChars(state.selectedChars, \n      {\n        randomSpacing: getRandomSpacing(),\n        durationType: getDurationMode(),\n        durationTime: getSessionTimeLimit(),\n        charSpacing: getCharSpacing(),\n        charLimit: getSessionCharAmount(),\n        overallSpeed: speeds[0],\n        charSpeed: speeds[1]\n      }) : \n      Composer.createScriptFromTextEntry(textEntryString,\n        {\n          overallSpeed: speeds[0],\n          charSpeed: speeds[1],\n          playMode: getFullTextMode(),\n          lineLimit: getTextLineLimit()\n        }\n      );\n      playText(latestComposition.script, playbackFinished, {\n        \"preDelay\": parseFloat(getPreDelay()),\n        \"postDelay\": parseFloat(getPostDelay())\n      }); \n    }\n  }\n\n  const answerDidChange = event => {\n    latestAnswer = event.target.value;\n  }\n\n  function playbackFinished() {\n    if (doNotMark === false) {\n      setState(prevState => ({ ...prevState, showResults: true }));\n      setState(prevState => ({ ...prevState, inSession: false }));\n    }\n    if (restartRequired === true) {\n      beginSession();\n    }\n    doNotMark = false;\n    restartRequired = false;\n  }\n\n  function abortClicked() {\n    stop();\n    doNotMark = true;\n    setState(prevState => ({ ...prevState, inSession: false }));\n  }\n\n  function restartClicked() {\n    stop();\n    doNotMark = true;\n    restartRequired = true;\n    setState(prevState => ({ ...prevState, inSession: false }));\n  }\n\n  function closeResultsClicked() {\n    setState(prevState => ({ ...prevState, showResults: false }));\n  }\n\n  function retryClicked() {\n    restartRequired = true;\n    setState(prevState => ({ ...prevState, showResults: false}));\n  }\n\n  function sourceChanged(s) {\n    setSessionSource(s);\n    setState(prevState => ({ ...prevState, source: s}));\n  }\n\n  const handleMorseTextEntryChange = s => {\n    textEntryString = s;\n    setTextEntryString(s);\n    if ((textEntryString.length === 0) !== state.textEntryIsEmpty) {\n      setState(prevState => ({ ...prevState, textEntryIsEmpty: textEntryString.length === 0}));\n    }\n  };\n\n  return (\n    <div id=\"TrainerContainer\"\n      className={`${state.inSession ? \"inSession\" : \"\"}`} \n    >\n      <div id=\"TrainerConfigContent\" \n        className={`${state.inSession ? \"inSession\" : \"\"} ${state.showResults ? \"showingResults\" : \"\"}`}\n      >\n        <Launcher\n          noChars={noChars}\n          beginWasClicked={() => beginWasClicked()}\n          source={state.source}\n          sourceChanged={s => sourceChanged(s)}\n        />\n        <MorseSelection\n          selectedChars={state.selectedChars}\n          selectedCharsDidChange={selectedCharsDidChange}\n          beginWasClicked={beginWasClicked}\n          show={state.source === 0}\n          style={{...state.source === 1 && {overflow: \"visible\", height: \"0px\"}}}\n          disabled={state.source === 1}\n        />\n        <MorseTextEntry\n          show={state.source === 1}\n          didChangeText={handleMorseTextEntryChange}\n          inSession={state.inSession}\n          source={state.source}\n          inReview={state.showResults}\n        />\n      </div>\n      <SessionReviewContainer\n        visible={state.showResults}\n        latestScript={latestComposition.script}\n        latestAnswer={latestAnswer}\n        closeResultsClicked={() => closeResultsClicked()}\n        retryClicked={() => retryClicked()}\n      />\n      <TrainerSessionContainer\n        inSession={state.inSession}\n        abortClicked={() => abortClicked()}\n        restartClicked={() => restartClicked()}\n        didChangeText={answerDidChange}\n        totalDuration={latestComposition.totalDuration + parseFloat(getPostDelay())}\n        startDelay={parseFloat(getPreDelay())}\n      />\n    </div>\n  );\n};\n\nexport default TrainerContainer;\n"],"sourceRoot":""}