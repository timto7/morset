{"version":3,"sources":["components/common/SpeedEntry.jsx","components/trainer/TrainerLauncher.jsx","components/trainer/MorseButtonAddRemove.jsx","components/trainer/MorseButton.jsx","components/trainer/MorseSelectionPanel.jsx","components/common/Stepper.jsx","components/trainer/SpacingSelectionContainer.jsx","components/trainer/MorseSelectionContainer.jsx","components/trainer/SessionButton.jsx","components/trainer/TrainerSessionContainer.jsx","services/trainer/composer.js","services/trainer/marker.js","components/trainer/SessionReviewContainer.jsx","components/trainer/TrainerContainer.jsx"],"names":["SpeedEntry","useContext","AudioContext","setSpeed","initialSpeeds","getSpeed","useState","overallSpeed","setOverallSpeed","charSpeed","setCharSpeed","validateOverall","val","parseInt","Number","isNaN","validateChar","submitOverallInputValue","v","submitCharInputValue","className","id","onChange","event","target","value","onBlur","onKeyDown","key","prompt","useStyles","makeStyles","theme","button","shadow","boxShadow","backgroundColor","fontSize","letterSpacing","fontWeight","margin","formControl","minWidth","marginLeft","selectEmpty","TrainerLauncher","noChars","beginWasClicked","classes","source","state","setState","Button","variant","color","starticon","disabled","onClick","FormControl","InputLabel","htmlFor","Select","oldValues","name","inputProps","MenuItem","MorseButtonAddRemove","selected","didClick","stopPropagation","onMouseDown","MorseButton","character","morse","custom","removeChar","addChar","play","isPlaying","playing","setPlaying","style","padding","height","width","replace","MorseSelectionContainer","title","columns","translation","characters","selectedChars","addCustomChars","removeCustomChars","listItems","Object","keys","map","includes","icon","RemoveIcon","tooltip","AddIcon","defaultProps","Stepper","initialValue","max","min","valueDidChange","visible","validateValue","undefined","placeVal","setPlaceVal","setValue","submitInputValue","downArw","Input","upArw","textTransform","marginRight","marginTop","marginBottom","justifyContent","borderRadius","validateSpacing","SpacingSelectionContainer","ref","useRef","useOutsideClick","setShow","getRandomSpacing","setRandomSpacing","getCharSpacing","setCharSpacing","show","initialCharSpacing","spacing","setSpacing","initialRandomSpacing","random","setRandom","submitCharSpacingInputValue","checked","prev","charOrder","customChars","lastCount","alphabet","alphabetTrans","makeTranslatedObject","numbersTrans","extendedTrans","punctuationTrans","storedCustomChars","window","localStorage","getItem","setItem","c","storedCharCount","length","selectedCharsDidChange","selection","openSB","useEffect","substring","handleCloseSB","reason","prevState","chars","i","charAt","count","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","slice","toUpperCase","Translator","translateTextToMorse","action","aria-label","SessionButton","Icon","label","actionType","actnType","TrainerSessionContainer","abortClicked","restartClicked","inSession","didChangeText","textareaRef","useLayoutEffect","current","focus","AbortIcon","RefreshIcon","spellCheck","readOnly","createScriptFromChars","options","script","limit","randomSpacing","charSpacing","spaceCountdown","Math","floor","trim","overallScore","noOfErrors","latestResults","scriptText","resultText","mistakesPresent","missesPresent","extraPresent","getResult","a","b","m","n","distanceMatrix","Array","fill","j","indicator","step","x","y","err","err2","hits","misses","subs","extra","uniqueChars","u","sort","stats","acount","split","obj","errors","errorPlacements","reverse","join","errorPlacements2","getResultType","resultType","SessionReviewContainer","transcriptKey","userInputKey","latestScript","latestAnswer","closeResultsClicked","retryClicked","Marker","toLowerCase","index","CloseIcon","RetryIcon","r","doNotMark","restartRequired","TrainerContainer","document","showResults","keyPress","keyCode","stop","ctrlKey","metaKey","which","beginSession","addEventListener","removeEventListener","body","overflow","getPreDelay","getPostDelay","getSessionCharAmount","Composer","playbackFinished","parseFloat"],"mappings":"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","file":"static/js/5.42e665d1.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport \"./SpeedEntry.css\";\nimport OverallSpeedInput from \"./Input.jsx\";\nimport CharSpeedInput from \"./Input.jsx\";\nimport AudioContext from \"../../context/AudioContext\";\n\nexport default function SpeedEntry() {\n  const { setSpeed, getSpeed } = useContext(AudioContext);\n  const initialSpeeds = getSpeed();\n  const [overallSpeed, setOverallSpeed] = useState(initialSpeeds[0]);\n  const [charSpeed, setCharSpeed] = useState(initialSpeeds[1]);\n\n  const validateOverall = val => {\n    val = parseInt(Number(val));\n    if (Number.isNaN(val)) return 15;\n    if (val < 1) return 1;\n    if (val > charSpeed) setCharSpeed(validateChar(val));\n    return val;\n  };\n\n  const validateChar = val => {\n    val = parseInt(Number(val));\n    if (Number.isNaN(val)) return 18;\n    if (val < 1) return 1;\n    if (val < overallSpeed) setOverallSpeed(validateOverall(val));\n    return val;\n  };\n  \n  const handleOverallInputChange = event => {\n    setOverallSpeed(event.target.value);\n  };\n\n  const handleOverallInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitOverallInputValue(event.target.value);\n    }\n  };\n\n  const handleOverallInputBlur = event => {\n    submitOverallInputValue(validateOverall(overallSpeed));\n  };\n\n  const submitOverallInputValue = v => {\n    v = validateOverall(overallSpeed);\n    setOverallSpeed(v);\n    setSpeed(v, charSpeed);\n  };\n\n  const handleCharInputChange = event => {\n    setCharSpeed(event.target.value);\n  };\n\n  const handleCharInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitCharInputValue(event.target.value);\n    }\n  };\n\n  const handleCharInputBlur = event => {\n    submitCharInputValue(validateOverall(overallSpeed));\n  };\n\n  const submitCharInputValue = v => {\n    v = validateChar(charSpeed);\n    setCharSpeed(v);\n    setSpeed(overallSpeed, v);\n  };\n\n  return (\n    <div className=\"SpeedEntry\">\n      <OverallSpeedInput \n        id=\"overallSpeedInput\"\n        onChange={handleOverallInputChange}\n        value={overallSpeed}\n        onBlur={handleOverallInputBlur}\n        onKeyDown={handleOverallInputKeyDown}\n        prompt=\"overall / character speed\" \n      />\n      <span className=\"speedEntrySlash\">/</span>\n      <CharSpeedInput \n        id=\"charSpeedInput\"\n        onChange={handleCharInputChange}\n        value={charSpeed}\n        onBlur={handleCharInputBlur}\n        onKeyDown={handleCharInputKeyDown}\n      />\n  </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./TrainerLauncher.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TrainIcon from \"@material-ui/icons/FitnessCenter\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport SpeedEntry from \"../common/SpeedEntry\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    shadow: 0,\n    \"&\": {\n      boxShadow: \"none !important\"\n    },\n    \"&:hover\": {\n      backgroundColor: \"#2980b9 !important\",\n      boxShadow: \"none !important\"\n    },\n    fontSize: \"16px\",\n    letterSpacing: \"1px\",\n    fontWeight: \"600\",\n    margin: \"none\"\n  },\n  formControl: {\n    minWidth: 120,\n    marginLeft: \"20px\"\n  },\n  selectEmpty: {}\n}));\n\nconst TrainerLauncher = ({ noChars, beginWasClicked }) => {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    source: 0\n  });\n\n  const handleChange = event => {\n    setState(oldValues => ({\n      ...oldValues,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return (\n    <div id=\"TrainerLauncherContainer\">\n      <div id=\"launchPrimary\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          starticon={<TrainIcon />}\n          disabled={noChars}\n          onClick={beginWasClicked}\n        >\n          <TrainIcon />\n          <span className=\"iconBtnText\">BEGIN</span>\n        </Button>\n      </div>\n      <div id=\"launchSecondary\">\n        <SpeedEntry />\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"source-simple\" color=\"primary\">\n            source\n          </InputLabel>\n          <Select\n            value={state.source}\n            onChange={handleChange}\n            inputProps={{\n              name: \"source\",\n              id: \"source-simple\"\n            }}\n            color=\"primary\"\n            disabled={true}\n          >\n            <MenuItem value={0}>Character Select</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    </div>\n  );\n};\n\nexport default TrainerLauncher;\n","import React from \"react\";\nimport \"./MorseButtonAddRemove.css\";\nimport RemoveIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\n\nconst MorseButtonAddRemove = ({ selected, onClick }) => {\n  function didClick(event) {\n    event.stopPropagation();\n    onClick();\n  }\n\n  return (\n    <div\n      className=\"MorseButtonAddRemove\"\n      onClick={event => didClick(event)}\n      onMouseDown={event => {\n        event.stopPropagation();\n      }}\n    >\n      {selected ? <RemoveIcon /> : <AddIcon />}\n    </div>\n  );\n};\n\nexport default MorseButtonAddRemove;\n","import React, { useContext, useState } from \"react\";\nimport \"./MorseButton.css\";\nimport Button from \"@material-ui/core/Button\";\nimport AudioContext from \"../../context/AudioContext\";\nimport Speaker from \"@material-ui/icons/VolumeUp\";\nimport AddRemoveBtn from \"./MorseButtonAddRemove\";\n\nconst MorseButton = ({\n  character,\n  morse,\n  selected,\n  custom,\n  removeChar,\n  addChar\n}) => {\n  const { play, isPlaying } = useContext(AudioContext);\n  const [playing, setPlaying] = useState(false);\n\n  function addRemoveClicked() {\n    if (selected) {\n      removeChar(character);\n    } else {\n      addChar(character);\n    }\n  }\n\n  return (\n    <div className={`MorseButton ${custom ? \"custom\" : \"\"}`}>\n      <Button\n        style={{ padding: \"0px\", height: \"25px\", width: \"200px\" }}\n        onClick={() => {\n          if (isPlaying() === false) {\n            play(morse.replace(/−/g, \"-\").replace(/·/g, \".\"), () => {\n              setPlaying(false);\n            });\n            setPlaying(true);\n          }\n        }}\n        className={selected ? \"selected\" : \"\"}\n      >\n        <div className=\"morseButtonTextContainer\">\n          <Speaker\n            className={`btnSpeaker ${playing ? \"show\" : \"\"} ${\n              custom ? \"custom\" : \"\"\n            }`}\n          />\n          <span>{character}</span>\n          <span>{morse}</span>\n        </div>\n        <AddRemoveBtn selected={selected} onClick={() => addRemoveClicked()} />\n      </Button>\n    </div>\n  );\n};\n\nexport default MorseButton;\n","import React from \"react\";\nimport \"./MorseSelectionPanel.css\";\nimport PropTypes from \"prop-types\";\nimport MorseButton from \"./MorseButton\";\nimport Add from \"../common/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Remove from \"../common/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\nconst MorseSelectionContainer = ({\n  title,\n  columns,\n  translation,\n  characters,\n  selectedChars,\n  custom,\n  addCustomChars,\n  removeCustomChars\n}) => {\n  const listItems = Object.keys(translation).map(key => (\n    <MorseButton\n      key={key}\n      character={key}\n      morse={translation[key].replace(/-/g, \"−\").replace(/\\./g, \"·\")}\n      selected={selectedChars.includes(key)}\n      custom={custom}\n      removeChar={() => removeCustomChars(key)}\n      addChar={() => addCustomChars(key)}\n    />\n  ));\n  return (\n    <div\n      className={`morseSelectionPanel ${custom ? \"custom\" : \"\"}`}\n      style={{ width: `${columns * 220}px` }}\n    >\n      <span className=\"morseSelectionPanelTitle\">{title}</span>\n      <div className=\"panelActions\">\n        <Remove\n          icon={RemoveIcon}\n          tooltip={\"Remove All\"}\n          onClick={() => removeCustomChars(characters)}\n        />\n        <Add\n          icon={AddIcon}\n          tooltip={\"Add All\"}\n          onClick={() => addCustomChars(characters)}\n        />\n      </div>\n      <div className=\"morseButtonContainer\">{listItems}</div>\n    </div>\n  );\n};\n\nMorseSelectionContainer.propTypes = {\n  columns: PropTypes.number\n};\n\nMorseSelectionContainer.defaultProps = {\n  columns: 1\n};\n\nexport default MorseSelectionContainer;\n","import React, { useState } from \"react\";\nimport \"./Stepper.css\";\nimport DownArrow from \"./IconButton\";\nimport { IoMdArrowDown as downArw } from \"react-icons/io\";\nimport UpArrow from \"./IconButton\";\nimport { IoMdArrowUp as upArw } from \"react-icons/io\";\nimport Input from \"./Input\";\nimport PropTypes from \"prop-types\";\n\nconst Stepper = ({\n  initialValue,\n  max,\n  min,\n  prompt,\n  valueDidChange,\n  visible\n}) => {\n\n  const validateValue = val => {\n    val = parseInt(Number(val));\n    if (min !== undefined) {\n      if (val < min) val = min;\n    }\n    if (max !== undefined) {\n      if (val > max) val = max;\n    }\n    return val;\n  };\n  \n  const [placeVal, setPlaceVal] = useState(validateValue(initialValue));\n  const [value, setValue] = useState(validateValue(initialValue));\n\n  const handleInputChange = event => {\n    setPlaceVal(event.target.value);\n  };\n\n  const handleInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitInputValue(event.target.value);\n    }\n  };\n\n  const handleInputBlur = () => {\n    submitInputValue(placeVal);\n  };\n\n  const submitInputValue = v => {\n    v = validateValue(placeVal);\n    setPlaceVal(v);\n    setValue(v);\n    valueDidChange(v);\n  };\n\n  return (\n    <div className={visible ? \"StepperContainer visible\" : \"StepperContainer\"}>\n      <DownArrow\n        icon={downArw}\n        tooltip={\"Descrease Characters\"}\n        disabled={value === min}\n        onClick={() => {\n          const v = validateValue(value - 1);\n          setValue(v);\n          setPlaceVal(v);\n          valueDidChange(v);\n        }}\n      />\n      <Input\n        className=\"stepperInput\"\n        onChange={handleInputChange}\n        value={placeVal}\n        onBlur={handleInputBlur}\n        onKeyDown={handleInputKeyDown}\n        prompt={prompt}\n      />\n      <UpArrow\n        icon={upArw}\n        tooltip={\"Increase Characters\"}\n        disabled={value === max}\n        onClick={() => {\n          const v = validateValue(value + 1);\n          setValue(v);\n          setPlaceVal(v);\n          valueDidChange(v);\n        }}\n      />\n    </div>\n  );\n};\n\nStepper.propTypes = {\n  initialValue: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number\n};\n\nexport default Stepper;\n","import React, { useState, useRef, useContext } from \"react\";\nimport \"./SpacingSelectionContainer.css\";\nimport SpacingButton from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useOutsideClick from \"../../services/useOutsideClick\";\nimport RandomSwitch from \"@material-ui/core/Switch\";\nimport AudioContext from \"../../context/AudioContext\";\nimport SpacingInput from \"../common/Input\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    shadow: 0,\n    \"&\": {\n      boxShadow: \"none !important\"\n    },\n    \"&:hover\": {\n      boxShadow: \"none !important\"\n    },\n    textTransform: \"none\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    margin: \"none\",\n    marginRight: \"12px\",\n    height: \"32px\",\n    width: \"150px\",\n    marginTop: \"auto\",\n    marginBottom: \"4px\",\n    padding: \"none\",\n    justifyContent: \"center\",\n    borderRadius: \"16px\"\n  },\n  selectEmpty: {}\n}));\n\nconst validateSpacing = val => {\n  val = Number.parseInt(val);\n  if (Number.isNaN(val)) return 10;\n  if (val < 0) return 0;\n  return val;\n};\n\nconst SpacingSelectionContainer = () => {\n\n  const ref = useRef();\n  useOutsideClick(ref, () => {\n    setShow(false);\n  });\n\n  const { getRandomSpacing, setRandomSpacing, getCharSpacing, setCharSpacing } = useContext(AudioContext);\n  \n  const [show, setShow] = useState(false);\n\n  const initialCharSpacing = getCharSpacing();\n  const [spacing, setSpacing] = useState(initialCharSpacing);\n  \n  const initialRandomSpacing = getRandomSpacing();\n  const [random, setRandom] = useState(initialRandomSpacing);\n\n  const toggleShow = () => {\n    setShow(!show);\n  };\n\n  const toggleRandom = () => {\n    setRandom(prev => !prev);\n    setRandomSpacing(!random);\n  };\n\n  const handleCharSpacingInputChange = event => {\n    setSpacing(event.target.value);\n  };\n\n  const handleCharSpacingInputKeyDown = event => {\n    if (event.key === \"Enter\") {\n      submitCharSpacingInputValue(event.target.value);\n    }\n  };\n\n  const handleCharSpacingInputBlur = event => {\n    submitCharSpacingInputValue(validateSpacing(spacing));\n  };\n\n  const submitCharSpacingInputValue = v => {\n    v = validateSpacing(spacing);\n    setCharSpacing(v);\n    setSpacing(v);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div id=\"SpacingSelectionContainer\" ref={ref}>\n      <SpacingButton\n        id=\"spacingBtn\"\n        variant=\"outlined\"\n        className={classes.button}\n        onClick={toggleShow}\n        style={show ? {backgroundColor: \"rgba(52, 152, 219, 0.5)\"} : {}}\n      >\n        <span>Spacing: {random ? \"Random\" : getCharSpacing()}</span>\n      </SpacingButton>\n      <div id=\"spacingPopover\" className={`${show ? \"show\" : \"\"} ${!random ? \"notRandom\" : \"\"}`}>\n        <div id=\"spacingSegmentTop\">\n          <span className=\"text\">Random Spacing</span>\n          <RandomSwitch \n            checked={random}\n            onChange={toggleRandom}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }} />\n        </div>\n        <div id=\"spacingSegmentBottom\" className={`${!random ? \"notRandom\" : \"\"}`}>\n          <span>spacing:</span>\n          <SpacingInput\n            onChange={handleCharSpacingInputChange}\n            value={spacing}\n            onBlur={handleCharSpacingInputBlur}\n            onKeyDown={handleCharSpacingInputKeyDown}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpacingSelectionContainer;\n","import React, { useState, useEffect } from \"react\";\nimport \"./MorseSelectionContainer.css\";\nimport Panel from \"./MorseSelectionPanel\";\nimport { makeTranslatedObject } from \"../../services/morse/morse-translation\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CharStepper from \"../common/Stepper\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Translator from \"../../services/morse/morse-translation\";\nimport SpacingContainer from \"./SpacingSelectionContainer\";\n\nconst charOrder = 'kmrsuaptlowinjefyvgqzhbcdx1928374650.,=/?\"!()&:;+-:@ÀÆĆĐĴĜŃØŠÞÜŹŻ';\nlet customChars = \"abc\";\nlet lastCount = 2;\n\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\nconst numbers = \"1234567890\";\nconst extended = \"ÀÆĆĐĴĜŃØŠÞÜŹŻ\";\nconst punctuation = '.,?\"!/()&:;=+-:@';\n\nconst alphabetTrans = makeTranslatedObject(alphabet);\nconst numbersTrans = makeTranslatedObject(numbers);\nconst extendedTrans = makeTranslatedObject(extended);\nconst punctuationTrans = makeTranslatedObject(punctuation);\n\nconst storedCustomChars = window.localStorage.getItem(\"customChars\");\nif (storedCustomChars === null || storedCustomChars === undefined || typeof storedCustomChars != \"string\") {\n  customChars = \"abc\";\n  window.localStorage.setItem(\"customChars\", \"abc\");\n} else {\n  customChars = storedCustomChars;\n}\n\nfunction getValidCount(c) {\n  if (c === null || c === undefined || Number.isNaN(c)) {\n    return 2;\n  } else if (c < 2) {\n    return 2;\n  } else if (c > charOrder.length) {\n    return charOrder.length;\n  }\n  return Number(c);\n}\nconst storedCharCount = window.localStorage.getItem(\"charCount\");\nlastCount = getValidCount(storedCharCount);\nwindow.localStorage.setItem(\"charCount\", lastCount);\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 120,\n    marginRight: \"20px\"\n  },\n  selectEmpty: {}\n}));\n\nconst MorseSelectionContainer = ({ selectedChars, selectedCharsDidChange }) => {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    selection: 0,\n    openSB: false\n  });\n\n  useEffect(() => {\n    selectedCharsDidChange(charOrder.substring(0, lastCount));\n  }, []);\n\n  const handleCloseSB = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setState(prevState => ({ ...prevState, openSB: false }));\n  };\n\n  const handleDropDownChange = event => {\n    setState(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n    if (event.target.name === \"selection\") {\n      setState(prevState => ({ selection: event.target.value }));\n      selectedCharsDidChange(\n        event.target.value === 0\n          ? charOrder.substring(0, lastCount)\n          : customChars\n      );\n    }\n    window.localStorage.setItem(\"selectionMode\", event.target.value);\n  };\n\n  function charCountDidChange(count) {\n    if (count - lastCount === 1) {\n      setState(prevState => ({ ...prevState, openSB: true }));\n    } else {\n      setState(prevState => ({ ...prevState, openSB: false }));\n    }\n    lastCount = count;\n    selectedCharsDidChange(charOrder.substring(0, count));\n    window.localStorage.setItem(\"charCount\", count);\n  }\n\n  function addCustomChars(chars) {\n    for (let i = 0; i < chars.length; i++) {\n      if (!customChars.includes(chars.charAt(i))) {\n        customChars += chars.charAt(i);\n      }\n    }\n    selectedCharsDidChange(customChars);\n    window.localStorage.setItem(\"customChars\", customChars);\n  }\n\n  function removeCustomChars(chars) {\n    for (let i = 0; i < chars.length; i++) {\n      if (customChars.includes(chars.charAt(i))) {\n        customChars = customChars.replace(chars.charAt(i), \"\");\n      }\n    }\n    selectedCharsDidChange(customChars);\n    window.localStorage.setItem(\"customChars\", customChars);\n  }\n\n  return (\n    <div id=\"MorseSelectionContainer\">\n      <h3>Selected Morse Characters: {selectedChars.length}</h3>\n      <div id=\"selectionOptions\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"selection-simple\" color=\"primary\">\n            selection\n          </InputLabel>\n          <Select\n            value={state.selection}\n            onChange={handleDropDownChange}\n            inputProps={{\n              name: \"selection\",\n              id: \"selection-simple\"\n            }}\n            color=\"primary\"\n          >\n            <MenuItem value={0}>Ordered</MenuItem>\n            <MenuItem value={1}>Custom</MenuItem>\n          </Select>\n        </FormControl>\n        <SpacingContainer />\n        <CharStepper\n          initialValue={lastCount}\n          min={2}\n          max={charOrder.length}\n          prompt=\"characters\"\n          valueDidChange={charCountDidChange}\n          visible={state.selection === 0 ? true : false}\n        />\n      </div>\n      <div id=\"innerSelectionContainer\">\n        <Panel\n          title=\"alphabet\"\n          columns={2}\n          characters={alphabet}\n          translation={alphabetTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"numbers\"\n          characters={numbers}\n          translation={numbersTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"extended\"\n          characters={extended}\n          translation={extendedTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Panel\n          title=\"punctuation\"\n          columns={2}\n          characters={punctuation}\n          translation={punctuationTrans}\n          selectedChars={selectedChars}\n          custom={state.selection === 0 ? false : true}\n          addCustomChars={addCustomChars}\n          removeCustomChars={removeCustomChars}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\"\n          }}\n          open={state.openSB}\n          autoHideDuration={4000}\n          onClose={handleCloseSB}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={\n            <div id=\"message-id\">\n              Latest: <b>{selectedChars.slice(-1).toUpperCase()}</b>\n              <em>\n                {Translator.translateTextToMorse(selectedChars.slice(-1))\n                  .replace(/-/g, \"−\")\n                  .replace(/\\./g, \"·\")}\n              </em>\n            </div>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleCloseSB}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MorseSelectionContainer;\n","import React from \"react\";\nimport \"./SessionButton.css\";\n\nconst SessionButton = ({Icon, label, actionType, onClick}) => {\n\n  let actnType = \"\";\n  switch(actionType) {\n    case \"abort\":\n      actnType = \"abort\";\n      break;\n    case \"restart\":\n      actnType = \"restart\";\n      break;\n    case \"go\":\n      actnType = \"go\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className={`sessionButton ${actnType}`} onClick={onClick}>\n        <Icon className={\"sessionButtonIcon\"} /><span>{label}</span>\n    </div>\n  );\n};\n\nexport default SessionButton;\n","import React, {useRef, useLayoutEffect} from \"react\";\nimport \"./TrainerSessionContainer.css\";\nimport AbortBtn from \"./SessionButton\";\nimport AbortIcon from \"@material-ui/icons/Close\";\nimport RefreshBtn from \"./SessionButton\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst TrainerSessionContainer = ({ abortClicked, restartClicked, inSession, didChangeText }) => {\n  const textareaRef = useRef();\n\n  useLayoutEffect(() => {\n    if (textareaRef !== undefined) {\n      textareaRef.current.focus();\n      textareaRef.current.value = \"\";\n    }\n  });\n\n  return (\n    <div\n      id=\"TrainerSessionContainer\"\n      className={`${inSession ? \"inSession\" : \"\"}`}\n    >\n      <div id=\"sessionOptionContainer\">\n        <AbortBtn actionType={\"abort\"} label=\"Abort\" Icon={AbortIcon} onClick={abortClicked} />\n        <RefreshBtn actionType={\"restart\"} label=\"Restart\" Icon={RefreshIcon} onClick={restartClicked} />\n      </div>\n      <textarea ref={textareaRef} spellCheck={false} readOnly={!inSession} onChange={didChangeText} />\n    </div>\n  );\n};\n\nexport default TrainerSessionContainer;\n","export function createScriptFromChars(chars, options = undefined) {\n    let script = \"\", limit = 30, randomSpacing = true, charSpacing = null, spaceCountdown = 0;\n\n    const setSpacing = () => {\n        if (randomSpacing) {\n            spaceCountdown = Math.floor(Math.random() * (limit / (Math.random() * limit / 2) + 1)) + (Math.floor(Math.random() * 3) + 1);\n        } else  {\n            spaceCountdown = charSpacing;\n        }\n    }\n\n    if (options !== undefined) {\n        if (\"limit\" in options) {\n          limit = options[\"limit\"];\n        }\n        if (\"randomSpacing\" in options) {\n            randomSpacing = options[\"randomSpacing\"];\n        }\n        if (\"charSpacing\" in options) {\n            charSpacing = options[\"charSpacing\"];\n        }\n    }\n    \n    setSpacing();\n\n    for (let i = 0; i < limit; i++) {\n        if (!spaceCountdown && i > 0) {\n            script += \" \";\n            setSpacing();\n        } else {\n            script += chars.charAt(Math.floor(Math.random() * chars.length));\n            spaceCountdown--;\n        }\n    }\n    return script.trim();\n}\n\nexport default {\n    createScriptFromChars\n};","export function getResult(a, b) {\n  const m = a.length, n = b.length;\n  const distanceMatrix = Array(n + 1).fill(null).map(() => Array(m + 1).fill(null));\n  for (let i = 0; i <= m; i += 1) {\n    distanceMatrix[0][i] = i;\n  }\n  for (let j = 0; j <= n; j += 1) {\n    distanceMatrix[j][0] = j;\n  }\n\n  for (let j = 1; j <= n; j += 1) {\n    for (let i = 1; i <= m; i += 1) {\n      const indicator = a[i - 1] === b[j - 1] ? 0 : 1;\n      distanceMatrix[j][i] = Math.min(\n        distanceMatrix[j][i - 1] + 1,\n        distanceMatrix[j - 1][i] + 1,\n        distanceMatrix[j - 1][i - 1] + indicator\n      );\n    }\n  }\n\n  let x = n, y = m, step, err = \"\", err2 = \"\", hits = {}, misses = {}, subs = {}, extra = {},\n  mistakesPresent = false, missesPresent = false, extraPresent = false;\n\n  while (x > 0 && y > 0) {\n    step = Math.min(distanceMatrix[x - 1][y - 1], distanceMatrix[x - 1][y], distanceMatrix[x][y - 1]);\n    if (distanceMatrix[x][y] === step) {\n      err += \"+\";\n      err2 += \"+\";\n      x--;\n      y--;\n      hits[a.charAt(y)] = hits[a.charAt(y)] + 1 || 1;\n    } else if (distanceMatrix[x - 1][y] === step) { // deletion / extra\n      err2 += \"e\";\n      x--;\n      extra[b.charAt(x)] = extra[b.charAt(x)] + 1 || 1;\n      extraPresent = true;\n    } else if (distanceMatrix[x][y - 1] === step) { // insertion / missing\n      err += \"m\";\n      y--;\n      misses[a.charAt(y)] = misses[a.charAt(y)] + 1 || 1;\n      missesPresent = true;\n    } else { // substitution\n      err += \"s\";\n      err2 += \"s\";\n      x--;\n      y--;\n      subs[a.charAt(y)] = subs[a.charAt(y)] + 1 || 1;\n      mistakesPresent = true;\n    }\n  }\n  while (x > 0) { // too many pre-pended\n    err2 += \"e\";\n    x--;\n    extra[b.charAt(x)] = extra[b.charAt(x)] + 1 || 1;\n    extraPresent = true;\n  }\n  while (y > 0) { // too many appended\n    err += \"m\";\n    y--;\n    misses[a.charAt(y)] = misses[a.charAt(y)] + 1 || 1;\n    missesPresent = true;\n  }\n\n  // create stats\n  let uniqueChars = [];\n  for (let u = 0; u < a.length; u++) {\n    const c = a.charAt(u);\n    if (!uniqueChars.includes(c)) {\n      uniqueChars[uniqueChars.length] = c;\n    }\n  }\n  for (let u = 0; u < b.length; u++) {\n    const c = b.charAt(u);\n    if (!uniqueChars.includes(c)) {\n      uniqueChars[uniqueChars.length] = c;\n    }\n  }\n  uniqueChars = uniqueChars.sort();\n  let stats = [];\n  for (let i = 0; i < uniqueChars.length; i++) {\n    const acount = a.split(uniqueChars[i]).length - 1;\n    let obj = {};\n    obj[\"char\"] = uniqueChars[i] === \" \" ? \"[space]\" : uniqueChars[i].toUpperCase();\n    obj[\"wrong\"] = subs[uniqueChars[i]] || 0;\n    obj[\"misses\"] = misses[uniqueChars[i]] || 0;\n    obj[\"extra\"] = extra[uniqueChars[i]] || 0;\n    obj[\"hits\"] = hits[uniqueChars[i]] || 0;\n    obj[\"overall\"] = Math.floor((obj[\"hits\"] / (acount + obj[\"extra\"])) * 100) || 0;\n    stats[i] = obj;\n  }\n\n  const results = {\n    errors: distanceMatrix[n][m],\n    errorPlacements: err.split(\"\").reverse().join(\"\").substring(0, m),\n    errorPlacements2: err2.split(\"\").reverse().join(\"\").substring(0, n),\n    hits: hits,\n    misses: misses,\n    extra: extra,\n    stats: stats,\n    mistakesPresent: mistakesPresent,\n    missesPresent: missesPresent,\n    extraPresent: extraPresent\n  }\n\n  return results;\n}\n\nexport default {\n  getResult\n};\n\n","import React, {useEffect} from \"react\";\nimport \"./SessionReviewContainer.css\";\nimport CloseBtn from \"./SessionButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport RetryBtn from \"./SessionButton\";\nimport RetryIcon from \"@material-ui/icons/Refresh\";\nimport Marker from \"../../services/trainer/marker\";\n\nlet overallScore, \n  noOfErrors, \n  stats = [], \n  latestResults, \n  scriptText, \n  resultText, \n  mistakesPresent, \n  missesPresent, \n  extraPresent;\n\nconst getResultType = c => {\n  let resultType;\n    switch (c) {\n      case \"m\":\n        resultType=\"result_text result_missed\";\n        break;\n      case \"s\":\n        resultType=\"result_text result_sub\";\n        break;\n      case \"e\":\n        resultType=\"result_text result_extra\";\n        break;\n      default:\n        resultType=\"result_text\";\n        break;\n    }\n    return resultType;\n}\n\nconst SessionReviewContainer = ({latestScript, latestAnswer, visible, closeResultsClicked, retryClicked}) => {\n\n  useEffect(() => {\n    latestResults = Marker.getResult(latestScript, latestAnswer.trim().toLowerCase());\n    stats = latestResults.stats;\n    noOfErrors = latestResults.errors;\n    overallScore = Math.floor((((latestScript.length - noOfErrors) > 0 ? latestScript.length - noOfErrors : 0) / latestScript.length) * 100);\n    scriptText = latestScript.split(\"\").map((c, index) =>\n      <span key={index} className={`${getResultType(latestResults.errorPlacements.charAt(index))}`}>{c}</span>\n    );\n    resultText = latestAnswer.split(\"\").map((c, index) =>\n      <span key={index} className={`${getResultType(latestResults.errorPlacements2.charAt(index))}`}>{c}</span>\n    );\n    mistakesPresent = latestResults.mistakesPresent;\n    missesPresent = latestResults.missesPresent;\n    extraPresent = latestResults.extraPresent;\n  }, [visible]);\n\n  let transcriptKey; \n  if (mistakesPresent || missesPresent) {\n    transcriptKey = \n    <div className=\"reviewKeyContainer\">\n      {mistakesPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle red\" /><span className=\"keyText\">mistake</span></div>}\n      {missesPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle yellow\" /><span className=\"keyText\">missed</span></div>}\n    </div>;\n  }\n\n  let userInputKey;\n  if (mistakesPresent || extraPresent) {\n    userInputKey = \n    <div className=\"reviewKeyContainer\">\n      {mistakesPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle red\" /><span className=\"keyText\">mistake</span></div>}\n      {extraPresent && <div className=\"reviewKeyContent\"><div className=\"keyCircle yellow\" /><span className=\"keyText\">extra</span></div>}\n    </div>;\n  }\n\n  return (\n    <div\n      id=\"SessionReviewContainer\"\n      className={`${visible ? \"visible\" : \"\"}`}\n    >\n      <div id=\"reviewOptionContainer\">\n        <div id=\"reviewOptionContent\">\n          <CloseBtn actionType={\"abort\"} label=\"Close\" Icon={CloseIcon} onClick={closeResultsClicked} />\n          <RetryBtn label=\"Retry\" Icon={RetryIcon} onClick={retryClicked} />\n        </div>\n      </div>\n      <div id=\"sessionReviewContent\">\n        <div id=\"sessionReviewStatsContainer\">\n          <div id=\"sessionReviewHeader\"><p>{overallScore}%</p><p>{noOfErrors} error{noOfErrors === 1 ? \"\" : \"s\"}</p></div>\n          <div id=\"sessionReviewStatsPanel\"></div>\n          <table>\n            <tbody>\n              <tr><th></th><th>overall</th><th>hit</th><th>mistake</th><th>miss</th><th>extra</th></tr>\n              {stats.map(r => (\n                <tr key={r[\"char\"]}>\n                  <td>{r[\"char\"]}</td>\n                  <td>{r[\"overall\"]}%</td>\n                  <td>{r[\"hits\"]}</td>\n                  <td className={`${!r[\"wrong\"] ? \"resultTableZero\" : \"\"}`}>{r[\"wrong\"]}</td>\n                  <td className={`${!r[\"misses\"] ? \"resultTableZero\" : \"\"}`}>{r[\"misses\"]}</td>\n                  <td className={`${!r[\"extra\"] ? \"resultTableZero\" : \"\"}`}>{r[\"extra\"]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div id=\"sessionTextReviewContainer\">\n          <div className=\"sessionTextReviewPanel\"><p className=\"sessionTextReviewHeader\">sent transcript</p>{transcriptKey}{scriptText}</div>\n          <div className=\"sessionTextReviewPanel\"><p className=\"sessionTextReviewHeader\">user entry</p>{userInputKey}{resultText}</div>\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SessionReviewContainer;\n","import React, { useState, useContext, useEffect} from \"react\";\nimport \"./TrainerContainer.css\";\nimport Launcher from \"./TrainerLauncher\";\nimport MorseSelection from \"./MorseSelectionContainer\";\nimport TrainerSessionContainer from \"./TrainerSessionContainer\";\nimport AudioContext from \"../../context/AudioContext\";\nimport Composer from \"../../services/trainer/composer\";\nimport SessionReviewContainer from \"./SessionReviewContainer\";\n\nlet noChars = false;\nlet doNotMark = false;\nlet restartRequired = false;\n\nlet latestScript = \"\";\nlet latestAnswer = \"\";\n\nconst TrainerContainer = () => {\n  document.title = \"MorseT - Trainer\";\n\n  const [state, setState] = useState({\n    selectedChars: \"\",\n    source: 0,\n    inSession: false,\n    showResults: false,\n  });\n\n  const keyPress = event => {\n    if (event.keyCode === 27) {\n     stop();\n     doNotMark = true;\n     setState(prevState => ({ ...prevState, inSession: false, showResults: false }));\n    }\n    if ((event.ctrlKey || event.metaKey) && event.which === 13) {\n      if (state.inSession === false) {\n        beginSession();\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyPress, false);\n    return () => {\n      document.removeEventListener(\"keydown\", keyPress, false);\n    };\n  });\n\n  useEffect(() => {\n    if (restartRequired) {\n      restartRequired = false;\n      beginSession();\n    }\n  }, [state.showResults])\n\n  useEffect(() => {\n    if (state.inSession || state.showResults) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"scroll\";\n    }\n  }, [state.inSession, state.showResults])\n\n  const { play, stop, isPlaying, getPreDelay, getPostDelay, getSessionCharAmount, getRandomSpacing, getCharSpacing } = useContext(AudioContext);\n\n  noChars = state.selectedChars.length > 0 ? false : true;\n\n  function selectedCharsDidChange(chars) {\n    setState(prevState => ({ ...prevState, selectedChars: chars }));\n  }\n\n  function beginWasClicked() {\n    beginSession();\n  }\n\n  function beginSession() {\n    if (isPlaying() === false) {\n      setState(prevState => ({ ...prevState, inSession: true, showResults: false }));\n      latestAnswer = \"\";\n      latestScript = Composer.createScriptFromChars(state.selectedChars, { limit: getSessionCharAmount(), randomSpacing: getRandomSpacing(), charSpacing: getCharSpacing() });\n      play(latestScript, playbackFinished, {\n        \"preDelay\": parseFloat(getPreDelay()),\n        \"postDelay\": parseFloat(getPostDelay())\n      });\n    }\n  }\n\n  const answerDidChange = event => {\n    latestAnswer = event.target.value;\n  }\n\n  function playbackFinished() {\n    if (doNotMark === false) {\n      setState(prevState => ({ ...prevState, showResults: true }));\n      setState(prevState => ({ ...prevState, inSession: false }));\n    }\n    if (restartRequired === true) {\n      beginSession();\n    }\n    doNotMark = false;\n    restartRequired = false;\n  }\n\n  function abortClicked() {\n    stop();\n    doNotMark = true;\n    setState(prevState => ({ ...prevState, inSession: false }));\n  }\n\n  function restartClicked() {\n    stop();\n    doNotMark = true;\n    restartRequired = true;\n  }\n\n  function closeResultsClicked() {\n    setState(prevState => ({ ...prevState, showResults: false }));\n  }\n\n  function retryClicked() {\n    restartRequired = true;\n    setState(prevState => ({ ...prevState, showResults: false}));\n  }\n\n  return (\n    <div id=\"TrainerContainer\" className={`${state.inSession ? \"inSession\" : \"\"}`}>\n      <div id=\"TrainerConfigContent\" className={`${state.inSession ? \"inSession\" : \"\"} ${state.showResults ? \"showingResults\" : \"\"}`}>\n      <Launcher noChars={noChars} beginWasClicked={() => beginWasClicked()} />\n      <MorseSelection\n        selectedChars={state.selectedChars}\n        selectedCharsDidChange={selectedCharsDidChange}\n        beginWasClicked={beginWasClicked}\n      />\n      </div>\n      \n      <SessionReviewContainer visible={state.showResults} latestScript={latestScript} latestAnswer={latestAnswer} closeResultsClicked={() => closeResultsClicked()} retryClicked={() => retryClicked()}/>\n      <TrainerSessionContainer inSession={state.inSession} abortClicked={() => abortClicked()} restartClicked={() => restartClicked()} didChangeText={answerDidChange} />\n    </div>\n  );\n};\n\nexport default TrainerContainer;\n"],"sourceRoot":""}